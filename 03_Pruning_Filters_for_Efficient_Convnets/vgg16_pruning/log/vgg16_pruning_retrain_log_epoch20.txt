Using cuda device
Files already downloaded and verified
# test datas : 10000
Files already downloaded and verified
# train datas : 50000
mini batch shape : torch.Size([128, 3, 32, 32])
========================================  conv1  ========================================

----- pruned rate : 10%, #pruned channels : 6 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61], device='cuda:0')
pruned_weight.shape : torch.Size([58, 3, 3, 3])
pruned_bias.shape : torch.Size([58])
pruned_bn_gamma.shape : torch.Size([58])
pruned_bn_beta.shape : torch.Size([58])
pruned_bn_running_mean.shape : torch.Size([58])
pruned_bn_running_var.shape : torch.Size([58])
pruned_next_weight.shape : torch.Size([64, 58, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00177
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00175
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00175
Epoch : 011, Training loss : 0.00176
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00175
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00176
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00177
																				 [conv1] pruned rate : 10%, #pruned channels : 6
																				 Top-1 accuracy : 91.78%, Top-5 accuracy : 99.36%

----- pruned rate : 20%, #pruned channels : 13 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35],
       device='cuda:0')
pruned_weight.shape : torch.Size([51, 3, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([64, 51, 3, 3])
Epoch : 001, Training loss : 0.00179
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00176
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00175
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00175
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00176
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00178
																				 [conv1] pruned rate : 20%, #pruned channels : 13
																				 Top-1 accuracy : 91.78%, Top-5 accuracy : 99.36%

----- pruned rate : 30%, #pruned channels : 19 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55], device='cuda:0')
pruned_weight.shape : torch.Size([45, 3, 3, 3])
pruned_bias.shape : torch.Size([45])
pruned_bn_gamma.shape : torch.Size([45])
pruned_bn_beta.shape : torch.Size([45])
pruned_bn_running_mean.shape : torch.Size([45])
pruned_bn_running_var.shape : torch.Size([45])
pruned_next_weight.shape : torch.Size([64, 45, 3, 3])
Epoch : 001, Training loss : 0.00176
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00176
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00175
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00174
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00178
																				 [conv1] pruned rate : 30%, #pruned channels : 19
																				 Top-1 accuracy : 91.74%, Top-5 accuracy : 99.33%

----- pruned rate : 40%, #pruned channels : 26 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62], device='cuda:0')
pruned_weight.shape : torch.Size([38, 3, 3, 3])
pruned_bias.shape : torch.Size([38])
pruned_bn_gamma.shape : torch.Size([38])
pruned_bn_beta.shape : torch.Size([38])
pruned_bn_running_mean.shape : torch.Size([38])
pruned_bn_running_var.shape : torch.Size([38])
pruned_next_weight.shape : torch.Size([64, 38, 3, 3])
Epoch : 001, Training loss : 0.00175
Epoch : 002, Training loss : 0.00175
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00174
Epoch : 005, Training loss : 0.00175
Epoch : 006, Training loss : 0.00176
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00175
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00175
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00175
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00177
																				 [conv1] pruned rate : 40%, #pruned channels : 26
																				 Top-1 accuracy : 91.84%, Top-5 accuracy : 99.41%

----- pruned rate : 50%, #pruned channels : 32 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13],
       device='cuda:0')
pruned_weight.shape : torch.Size([32, 3, 3, 3])
pruned_bias.shape : torch.Size([32])
pruned_bn_gamma.shape : torch.Size([32])
pruned_bn_beta.shape : torch.Size([32])
pruned_bn_running_mean.shape : torch.Size([32])
pruned_bn_running_var.shape : torch.Size([32])
pruned_next_weight.shape : torch.Size([64, 32, 3, 3])
Epoch : 001, Training loss : 0.00175
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00179
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00174
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00174
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00175
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv1] pruned rate : 50%, #pruned channels : 32
																				 Top-1 accuracy : 91.77%, Top-5 accuracy : 99.38%

----- pruned rate : 60%, #pruned channels : 38 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21], device='cuda:0')
pruned_weight.shape : torch.Size([26, 3, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([64, 26, 3, 3])
Epoch : 001, Training loss : 0.00176
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00176
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00175
Epoch : 019, Training loss : 0.00174
Epoch : 020, Training loss : 0.00177
																				 [conv1] pruned rate : 60%, #pruned channels : 38
																				 Top-1 accuracy : 91.64%, Top-5 accuracy : 99.38%

----- pruned rate : 70%, #pruned channels : 45 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2], device='cuda:0')
pruned_weight.shape : torch.Size([19, 3, 3, 3])
pruned_bias.shape : torch.Size([19])
pruned_bn_gamma.shape : torch.Size([19])
pruned_bn_beta.shape : torch.Size([19])
pruned_bn_running_mean.shape : torch.Size([19])
pruned_bn_running_var.shape : torch.Size([19])
pruned_next_weight.shape : torch.Size([64, 19, 3, 3])
Epoch : 001, Training loss : 0.00199
Epoch : 002, Training loss : 0.00183
Epoch : 003, Training loss : 0.00183
Epoch : 004, Training loss : 0.00188
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00180
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00176
																				 [conv1] pruned rate : 70%, #pruned channels : 45
																				 Top-1 accuracy : 91.56%, Top-5 accuracy : 99.30%

----- pruned rate : 80%, #pruned channels : 51 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15], device='cuda:0')
pruned_weight.shape : torch.Size([13, 3, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([64, 13, 3, 3])
Epoch : 001, Training loss : 0.00383
Epoch : 002, Training loss : 0.00242
Epoch : 003, Training loss : 0.00205
Epoch : 004, Training loss : 0.00199
Epoch : 005, Training loss : 0.00188
Epoch : 006, Training loss : 0.00186
Epoch : 007, Training loss : 0.00183
Epoch : 008, Training loss : 0.00183
Epoch : 009, Training loss : 0.00185
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00182
Epoch : 012, Training loss : 0.00181
Epoch : 013, Training loss : 0.00185
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00179
																				 [conv1] pruned rate : 80%, #pruned channels : 51
																				 Top-1 accuracy : 91.42%, Top-5 accuracy : 99.25%

----- pruned rate : 90%, #pruned channels : 58 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32, 22, 47, 41], device='cuda:0')
pruned_weight.shape : torch.Size([6, 3, 3, 3])
pruned_bias.shape : torch.Size([6])
pruned_bn_gamma.shape : torch.Size([6])
pruned_bn_beta.shape : torch.Size([6])
pruned_bn_running_mean.shape : torch.Size([6])
pruned_bn_running_var.shape : torch.Size([6])
pruned_next_weight.shape : torch.Size([64, 6, 3, 3])
Epoch : 001, Training loss : 0.01732
Epoch : 002, Training loss : 0.00529
Epoch : 003, Training loss : 0.00378
Epoch : 004, Training loss : 0.00270
Epoch : 005, Training loss : 0.00221
Epoch : 006, Training loss : 0.00212
Epoch : 007, Training loss : 0.00211
Epoch : 008, Training loss : 0.00212
Epoch : 009, Training loss : 0.00207
Epoch : 010, Training loss : 0.00201
Epoch : 011, Training loss : 0.00196
Epoch : 012, Training loss : 0.00186
Epoch : 013, Training loss : 0.00186
Epoch : 014, Training loss : 0.00185
Epoch : 015, Training loss : 0.00185
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00183
Epoch : 018, Training loss : 0.00183
Epoch : 019, Training loss : 0.00185
Epoch : 020, Training loss : 0.00184
																				 [conv1] pruned rate : 90%, #pruned channels : 58
																				 Top-1 accuracy : 90.97%, Top-5 accuracy : 99.10%

----- pruned rate : 95%, #pruned channels : 61 -----
weight.shape : torch.Size([64, 3, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([30, 24, 32, 22, 47, 41, 49, 53, 51, 56, 23,  0, 15, 57, 50,  7, 58, 36,
         2,  4, 12, 31, 17, 16, 63, 21,  1, 33, 48,  9, 43, 13, 37, 52, 34, 27,
        10, 62, 60, 46, 59, 39, 18, 40, 55, 29,  3,  8, 19, 54, 35, 20, 28,  6,
        11, 44, 14, 61, 25, 38, 45,  5, 26, 42], device='cuda:0')
saving_filter_idices : tensor([30, 24, 32], device='cuda:0')
pruned_weight.shape : torch.Size([3, 3, 3, 3])
pruned_bias.shape : torch.Size([3])
pruned_bn_gamma.shape : torch.Size([3])
pruned_bn_beta.shape : torch.Size([3])
pruned_bn_running_mean.shape : torch.Size([3])
pruned_bn_running_var.shape : torch.Size([3])
pruned_next_weight.shape : torch.Size([64, 3, 3, 3])
Epoch : 001, Training loss : 0.03363
Epoch : 002, Training loss : 0.00964
Epoch : 003, Training loss : 0.00478
Epoch : 004, Training loss : 0.00430
Epoch : 005, Training loss : 0.00324
Epoch : 006, Training loss : 0.00307
Epoch : 007, Training loss : 0.00262
Epoch : 008, Training loss : 0.00206
Epoch : 009, Training loss : 0.00231
Epoch : 010, Training loss : 0.00210
Epoch : 011, Training loss : 0.00220
Epoch : 012, Training loss : 0.00210
Epoch : 013, Training loss : 0.00196
Epoch : 014, Training loss : 0.00187
Epoch : 015, Training loss : 0.00188
Epoch : 016, Training loss : 0.00193
Epoch : 017, Training loss : 0.00185
Epoch : 018, Training loss : 0.00186
Epoch : 019, Training loss : 0.00185
Epoch : 020, Training loss : 0.00182
																				 [conv1] pruned rate : 95%, #pruned channels : 61
																				 Top-1 accuracy : 91.01%, Top-5 accuracy : 99.17%
========================================  conv2  ========================================

----- pruned rate : 10%, #pruned channels : 6 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16], device='cuda:0')
pruned_weight.shape : torch.Size([58, 64, 3, 3])
pruned_bias.shape : torch.Size([58])
pruned_bn_gamma.shape : torch.Size([58])
pruned_bn_beta.shape : torch.Size([58])
pruned_bn_running_mean.shape : torch.Size([58])
pruned_bn_running_var.shape : torch.Size([58])
pruned_next_weight.shape : torch.Size([128, 58, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00179
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00176
Epoch : 007, Training loss : 0.00175
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00175
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00176
																				 [conv2] pruned rate : 10%, #pruned channels : 6
																				 Top-1 accuracy : 91.56%, Top-5 accuracy : 99.31%

----- pruned rate : 20%, #pruned channels : 13 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21],
       device='cuda:0')
pruned_weight.shape : torch.Size([51, 64, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([128, 51, 3, 3])
Epoch : 001, Training loss : 0.00183
Epoch : 002, Training loss : 0.00187
Epoch : 003, Training loss : 0.00184
Epoch : 004, Training loss : 0.00180
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00181
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv2] pruned rate : 20%, #pruned channels : 13
																				 Top-1 accuracy : 91.49%, Top-5 accuracy : 99.34%

----- pruned rate : 30%, #pruned channels : 19 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55], device='cuda:0')
pruned_weight.shape : torch.Size([45, 64, 3, 3])
pruned_bias.shape : torch.Size([45])
pruned_bn_gamma.shape : torch.Size([45])
pruned_bn_beta.shape : torch.Size([45])
pruned_bn_running_mean.shape : torch.Size([45])
pruned_bn_running_var.shape : torch.Size([45])
pruned_next_weight.shape : torch.Size([128, 45, 3, 3])
Epoch : 001, Training loss : 0.00232
Epoch : 002, Training loss : 0.00204
Epoch : 003, Training loss : 0.00193
Epoch : 004, Training loss : 0.00190
Epoch : 005, Training loss : 0.00181
Epoch : 006, Training loss : 0.00183
Epoch : 007, Training loss : 0.00182
Epoch : 008, Training loss : 0.00181
Epoch : 009, Training loss : 0.00179
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00181
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00180
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00178
																				 [conv2] pruned rate : 30%, #pruned channels : 19
																				 Top-1 accuracy : 91.44%, Top-5 accuracy : 99.33%

----- pruned rate : 40%, #pruned channels : 26 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46], device='cuda:0')
pruned_weight.shape : torch.Size([38, 64, 3, 3])
pruned_bias.shape : torch.Size([38])
pruned_bn_gamma.shape : torch.Size([38])
pruned_bn_beta.shape : torch.Size([38])
pruned_bn_running_mean.shape : torch.Size([38])
pruned_bn_running_var.shape : torch.Size([38])
pruned_next_weight.shape : torch.Size([128, 38, 3, 3])
Epoch : 001, Training loss : 0.00312
Epoch : 002, Training loss : 0.00220
Epoch : 003, Training loss : 0.00214
Epoch : 004, Training loss : 0.00203
Epoch : 005, Training loss : 0.00191
Epoch : 006, Training loss : 0.00184
Epoch : 007, Training loss : 0.00185
Epoch : 008, Training loss : 0.00185
Epoch : 009, Training loss : 0.00183
Epoch : 010, Training loss : 0.00181
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00184
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00178
																				 [conv2] pruned rate : 40%, #pruned channels : 26
																				 Top-1 accuracy : 91.21%, Top-5 accuracy : 99.26%

----- pruned rate : 50%, #pruned channels : 32 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37],
       device='cuda:0')
pruned_weight.shape : torch.Size([32, 64, 3, 3])
pruned_bias.shape : torch.Size([32])
pruned_bn_gamma.shape : torch.Size([32])
pruned_bn_beta.shape : torch.Size([32])
pruned_bn_running_mean.shape : torch.Size([32])
pruned_bn_running_var.shape : torch.Size([32])
pruned_next_weight.shape : torch.Size([128, 32, 3, 3])
Epoch : 001, Training loss : 0.00522
Epoch : 002, Training loss : 0.00246
Epoch : 003, Training loss : 0.00221
Epoch : 004, Training loss : 0.00206
Epoch : 005, Training loss : 0.00194
Epoch : 006, Training loss : 0.00199
Epoch : 007, Training loss : 0.00196
Epoch : 008, Training loss : 0.00186
Epoch : 009, Training loss : 0.00203
Epoch : 010, Training loss : 0.00192
Epoch : 011, Training loss : 0.00188
Epoch : 012, Training loss : 0.00189
Epoch : 013, Training loss : 0.00184
Epoch : 014, Training loss : 0.00183
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00179
																				 [conv2] pruned rate : 50%, #pruned channels : 32
																				 Top-1 accuracy : 91.11%, Top-5 accuracy : 99.17%

----- pruned rate : 60%, #pruned channels : 38 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60], device='cuda:0')
pruned_weight.shape : torch.Size([26, 64, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([128, 26, 3, 3])
Epoch : 001, Training loss : 0.01026
Epoch : 002, Training loss : 0.00371
Epoch : 003, Training loss : 0.00283
Epoch : 004, Training loss : 0.00268
Epoch : 005, Training loss : 0.00238
Epoch : 006, Training loss : 0.00245
Epoch : 007, Training loss : 0.00216
Epoch : 008, Training loss : 0.00208
Epoch : 009, Training loss : 0.00216
Epoch : 010, Training loss : 0.00205
Epoch : 011, Training loss : 0.00190
Epoch : 012, Training loss : 0.00191
Epoch : 013, Training loss : 0.00184
Epoch : 014, Training loss : 0.00184
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00184
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00177
																				 [conv2] pruned rate : 60%, #pruned channels : 38
																				 Top-1 accuracy : 91.07%, Top-5 accuracy : 99.23%

----- pruned rate : 70%, #pruned channels : 45 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61], device='cuda:0')
pruned_weight.shape : torch.Size([19, 64, 3, 3])
pruned_bias.shape : torch.Size([19])
pruned_bn_gamma.shape : torch.Size([19])
pruned_bn_beta.shape : torch.Size([19])
pruned_bn_running_mean.shape : torch.Size([19])
pruned_bn_running_var.shape : torch.Size([19])
pruned_next_weight.shape : torch.Size([128, 19, 3, 3])
Epoch : 001, Training loss : 0.02509
Epoch : 002, Training loss : 0.00669
Epoch : 003, Training loss : 0.00485
Epoch : 004, Training loss : 0.00349
Epoch : 005, Training loss : 0.00284
Epoch : 006, Training loss : 0.00241
Epoch : 007, Training loss : 0.00250
Epoch : 008, Training loss : 0.00218
Epoch : 009, Training loss : 0.00216
Epoch : 010, Training loss : 0.00203
Epoch : 011, Training loss : 0.00208
Epoch : 012, Training loss : 0.00210
Epoch : 013, Training loss : 0.00194
Epoch : 014, Training loss : 0.00188
Epoch : 015, Training loss : 0.00190
Epoch : 016, Training loss : 0.00184
Epoch : 017, Training loss : 0.00183
Epoch : 018, Training loss : 0.00184
Epoch : 019, Training loss : 0.00189
Epoch : 020, Training loss : 0.00186
																				 [conv2] pruned rate : 70%, #pruned channels : 45
																				 Top-1 accuracy : 90.64%, Top-5 accuracy : 99.03%

----- pruned rate : 80%, #pruned channels : 51 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5], device='cuda:0')
pruned_weight.shape : torch.Size([13, 64, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([128, 13, 3, 3])
Epoch : 001, Training loss : 0.05305
Epoch : 002, Training loss : 0.01239
Epoch : 003, Training loss : 0.01044
Epoch : 004, Training loss : 0.00592
Epoch : 005, Training loss : 0.00532
Epoch : 006, Training loss : 0.00336
Epoch : 007, Training loss : 0.00338
Epoch : 008, Training loss : 0.00298
Epoch : 009, Training loss : 0.00272
Epoch : 010, Training loss : 0.00248
Epoch : 011, Training loss : 0.00226
Epoch : 012, Training loss : 0.00234
Epoch : 013, Training loss : 0.00220
Epoch : 014, Training loss : 0.00238
Epoch : 015, Training loss : 0.00212
Epoch : 016, Training loss : 0.00203
Epoch : 017, Training loss : 0.00194
Epoch : 018, Training loss : 0.00196
Epoch : 019, Training loss : 0.00189
Epoch : 020, Training loss : 0.00190
																				 [conv2] pruned rate : 80%, #pruned channels : 51
																				 Top-1 accuracy : 90.27%, Top-5 accuracy : 99.11%

----- pruned rate : 90%, #pruned channels : 58 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53,  6, 54, 14], device='cuda:0')
pruned_weight.shape : torch.Size([6, 64, 3, 3])
pruned_bias.shape : torch.Size([6])
pruned_bn_gamma.shape : torch.Size([6])
pruned_bn_beta.shape : torch.Size([6])
pruned_bn_running_mean.shape : torch.Size([6])
pruned_bn_running_var.shape : torch.Size([6])
pruned_next_weight.shape : torch.Size([128, 6, 3, 3])
Epoch : 001, Training loss : 0.21520
Epoch : 002, Training loss : 0.05493
Epoch : 003, Training loss : 0.03304
Epoch : 004, Training loss : 0.02380
Epoch : 005, Training loss : 0.01426
Epoch : 006, Training loss : 0.01262
Epoch : 007, Training loss : 0.00937
Epoch : 008, Training loss : 0.00779
Epoch : 009, Training loss : 0.00757
Epoch : 010, Training loss : 0.00524
Epoch : 011, Training loss : 0.00448
Epoch : 012, Training loss : 0.00377
Epoch : 013, Training loss : 0.00384
Epoch : 014, Training loss : 0.00385
Epoch : 015, Training loss : 0.00323
Epoch : 016, Training loss : 0.00296
Epoch : 017, Training loss : 0.00357
Epoch : 018, Training loss : 0.00379
Epoch : 019, Training loss : 0.00374
Epoch : 020, Training loss : 0.00547
																				 [conv2] pruned rate : 90%, #pruned channels : 58
																				 Top-1 accuracy : 88.68%, Top-5 accuracy : 99.00%

----- pruned rate : 95%, #pruned channels : 61 -----
weight.shape : torch.Size([64, 64, 3, 3])
bias.shape : torch.Size([64])
bn_gamma.shape : torch.Size([64])
bn_beta.shape : torch.Size([64])
bn_running_mean.shape : torch.Size([64])
bn_running_var.shape : torch.Size([64])
sorted_weight_indices : tensor([39, 35, 53,  6, 54, 14,  3, 33, 32, 58, 52, 24,  5,  2, 62, 10, 34, 44,
        61, 30, 50, 19,  4, 51,  8, 60, 45, 36, 63, 17, 26, 37, 18, 23, 59, 25,
        28, 46, 49, 56,  0, 41, 47,  7, 55, 48, 22, 11, 40, 29, 21, 43, 38, 57,
        31, 27, 12, 16, 15,  9, 20, 13,  1, 42], device='cuda:0')
saving_filter_idices : tensor([39, 35, 53], device='cuda:0')
pruned_weight.shape : torch.Size([3, 64, 3, 3])
pruned_bias.shape : torch.Size([3])
pruned_bn_gamma.shape : torch.Size([3])
pruned_bn_beta.shape : torch.Size([3])
pruned_bn_running_mean.shape : torch.Size([3])
pruned_bn_running_var.shape : torch.Size([3])
pruned_next_weight.shape : torch.Size([128, 3, 3, 3])
Epoch : 001, Training loss : 0.51281
Epoch : 002, Training loss : 0.23275
Epoch : 003, Training loss : 0.15260
Epoch : 004, Training loss : 0.10999
Epoch : 005, Training loss : 0.08174
Epoch : 006, Training loss : 0.06416
Epoch : 007, Training loss : 0.04896
Epoch : 008, Training loss : 0.04075
Epoch : 009, Training loss : 0.03622
Epoch : 010, Training loss : 0.03159
Epoch : 011, Training loss : 0.02258
Epoch : 012, Training loss : 0.01875
Epoch : 013, Training loss : 0.01667
Epoch : 014, Training loss : 0.01811
Epoch : 015, Training loss : 0.01536
Epoch : 016, Training loss : 0.01184
Epoch : 017, Training loss : 0.01474
Epoch : 018, Training loss : 0.01626
Epoch : 019, Training loss : 0.01584
Epoch : 020, Training loss : 0.01645
																				 [conv2] pruned rate : 95%, #pruned channels : 61
																				 Top-1 accuracy : 84.89%, Top-5 accuracy : 98.50%
========================================  conv3  ========================================

----- pruned rate : 10%, #pruned channels : 13 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57], device='cuda:0')
pruned_weight.shape : torch.Size([115, 64, 3, 3])
pruned_bias.shape : torch.Size([115])
pruned_bn_gamma.shape : torch.Size([115])
pruned_bn_beta.shape : torch.Size([115])
pruned_bn_running_mean.shape : torch.Size([115])
pruned_bn_running_var.shape : torch.Size([115])
pruned_next_weight.shape : torch.Size([128, 115, 3, 3])
Epoch : 001, Training loss : 0.00176
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00176
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00176
Epoch : 011, Training loss : 0.00174
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00175
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00174
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv3] pruned rate : 10%, #pruned channels : 13
																				 Top-1 accuracy : 91.71%, Top-5 accuracy : 99.37%

----- pruned rate : 20%, #pruned channels : 26 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22], device='cuda:0')
pruned_weight.shape : torch.Size([102, 64, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([128, 102, 3, 3])
Epoch : 001, Training loss : 0.00202
Epoch : 002, Training loss : 0.00182
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00183
Epoch : 005, Training loss : 0.00188
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00181
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00180
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00177
																				 [conv3] pruned rate : 20%, #pruned channels : 26
																				 Top-1 accuracy : 91.65%, Top-5 accuracy : 99.40%

----- pruned rate : 30%, #pruned channels : 38 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18], device='cuda:0')
pruned_weight.shape : torch.Size([90, 64, 3, 3])
pruned_bias.shape : torch.Size([90])
pruned_bn_gamma.shape : torch.Size([90])
pruned_bn_beta.shape : torch.Size([90])
pruned_bn_running_mean.shape : torch.Size([90])
pruned_bn_running_var.shape : torch.Size([90])
pruned_next_weight.shape : torch.Size([128, 90, 3, 3])
Epoch : 001, Training loss : 0.00216
Epoch : 002, Training loss : 0.00199
Epoch : 003, Training loss : 0.00197
Epoch : 004, Training loss : 0.00183
Epoch : 005, Training loss : 0.00188
Epoch : 006, Training loss : 0.00184
Epoch : 007, Training loss : 0.00181
Epoch : 008, Training loss : 0.00183
Epoch : 009, Training loss : 0.00182
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00183
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00183
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00178
																				 [conv3] pruned rate : 30%, #pruned channels : 38
																				 Top-1 accuracy : 91.66%, Top-5 accuracy : 99.45%

----- pruned rate : 40%, #pruned channels : 51 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51], device='cuda:0')
pruned_weight.shape : torch.Size([77, 64, 3, 3])
pruned_bias.shape : torch.Size([77])
pruned_bn_gamma.shape : torch.Size([77])
pruned_bn_beta.shape : torch.Size([77])
pruned_bn_running_mean.shape : torch.Size([77])
pruned_bn_running_var.shape : torch.Size([77])
pruned_next_weight.shape : torch.Size([128, 77, 3, 3])
Epoch : 001, Training loss : 0.00323
Epoch : 002, Training loss : 0.00234
Epoch : 003, Training loss : 0.00211
Epoch : 004, Training loss : 0.00209
Epoch : 005, Training loss : 0.00198
Epoch : 006, Training loss : 0.00191
Epoch : 007, Training loss : 0.00191
Epoch : 008, Training loss : 0.00193
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00186
Epoch : 011, Training loss : 0.00192
Epoch : 012, Training loss : 0.00187
Epoch : 013, Training loss : 0.00181
Epoch : 014, Training loss : 0.00183
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00178
																				 [conv3] pruned rate : 40%, #pruned channels : 51
																				 Top-1 accuracy : 91.25%, Top-5 accuracy : 99.26%

----- pruned rate : 50%, #pruned channels : 64 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49], device='cuda:0')
pruned_weight.shape : torch.Size([64, 64, 3, 3])
pruned_bias.shape : torch.Size([64])
pruned_bn_gamma.shape : torch.Size([64])
pruned_bn_beta.shape : torch.Size([64])
pruned_bn_running_mean.shape : torch.Size([64])
pruned_bn_running_var.shape : torch.Size([64])
pruned_next_weight.shape : torch.Size([128, 64, 3, 3])
Epoch : 001, Training loss : 0.00502
Epoch : 002, Training loss : 0.00357
Epoch : 003, Training loss : 0.00236
Epoch : 004, Training loss : 0.00223
Epoch : 005, Training loss : 0.00226
Epoch : 006, Training loss : 0.00199
Epoch : 007, Training loss : 0.00195
Epoch : 008, Training loss : 0.00206
Epoch : 009, Training loss : 0.00196
Epoch : 010, Training loss : 0.00187
Epoch : 011, Training loss : 0.00184
Epoch : 012, Training loss : 0.00188
Epoch : 013, Training loss : 0.00184
Epoch : 014, Training loss : 0.00182
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00183
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00190
Epoch : 020, Training loss : 0.00181
																				 [conv3] pruned rate : 50%, #pruned channels : 64
																				 Top-1 accuracy : 91.26%, Top-5 accuracy : 99.30%

----- pruned rate : 60%, #pruned channels : 77 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86], device='cuda:0')
pruned_weight.shape : torch.Size([51, 64, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([128, 51, 3, 3])
Epoch : 001, Training loss : 0.00817
Epoch : 002, Training loss : 0.00454
Epoch : 003, Training loss : 0.00293
Epoch : 004, Training loss : 0.00266
Epoch : 005, Training loss : 0.00245
Epoch : 006, Training loss : 0.00199
Epoch : 007, Training loss : 0.00202
Epoch : 008, Training loss : 0.00190
Epoch : 009, Training loss : 0.00198
Epoch : 010, Training loss : 0.00199
Epoch : 011, Training loss : 0.00187
Epoch : 012, Training loss : 0.00187
Epoch : 013, Training loss : 0.00195
Epoch : 014, Training loss : 0.00192
Epoch : 015, Training loss : 0.00184
Epoch : 016, Training loss : 0.00183
Epoch : 017, Training loss : 0.00186
Epoch : 018, Training loss : 0.00182
Epoch : 019, Training loss : 0.00182
Epoch : 020, Training loss : 0.00183
																				 [conv3] pruned rate : 60%, #pruned channels : 77
																				 Top-1 accuracy : 91.11%, Top-5 accuracy : 99.13%

----- pruned rate : 70%, #pruned channels : 90 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44], device='cuda:0')
pruned_weight.shape : torch.Size([38, 64, 3, 3])
pruned_bias.shape : torch.Size([38])
pruned_bn_gamma.shape : torch.Size([38])
pruned_bn_beta.shape : torch.Size([38])
pruned_bn_running_mean.shape : torch.Size([38])
pruned_bn_running_var.shape : torch.Size([38])
pruned_next_weight.shape : torch.Size([128, 38, 3, 3])
Epoch : 001, Training loss : 0.01995
Epoch : 002, Training loss : 0.00823
Epoch : 003, Training loss : 0.00471
Epoch : 004, Training loss : 0.00409
Epoch : 005, Training loss : 0.00316
Epoch : 006, Training loss : 0.00311
Epoch : 007, Training loss : 0.00237
Epoch : 008, Training loss : 0.00208
Epoch : 009, Training loss : 0.00223
Epoch : 010, Training loss : 0.00204
Epoch : 011, Training loss : 0.00209
Epoch : 012, Training loss : 0.00195
Epoch : 013, Training loss : 0.00190
Epoch : 014, Training loss : 0.00192
Epoch : 015, Training loss : 0.00190
Epoch : 016, Training loss : 0.00183
Epoch : 017, Training loss : 0.00190
Epoch : 018, Training loss : 0.00184
Epoch : 019, Training loss : 0.00182
Epoch : 020, Training loss : 0.00181
																				 [conv3] pruned rate : 70%, #pruned channels : 90
																				 Top-1 accuracy : 90.98%, Top-5 accuracy : 99.29%

----- pruned rate : 80%, #pruned channels : 102 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 64, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([128, 26, 3, 3])
Epoch : 001, Training loss : 0.04189
Epoch : 002, Training loss : 0.01144
Epoch : 003, Training loss : 0.00670
Epoch : 004, Training loss : 0.00468
Epoch : 005, Training loss : 0.00510
Epoch : 006, Training loss : 0.00376
Epoch : 007, Training loss : 0.00315
Epoch : 008, Training loss : 0.00316
Epoch : 009, Training loss : 0.00259
Epoch : 010, Training loss : 0.00244
Epoch : 011, Training loss : 0.00256
Epoch : 012, Training loss : 0.00238
Epoch : 013, Training loss : 0.00202
Epoch : 014, Training loss : 0.00201
Epoch : 015, Training loss : 0.00193
Epoch : 016, Training loss : 0.00191
Epoch : 017, Training loss : 0.00185
Epoch : 018, Training loss : 0.00187
Epoch : 019, Training loss : 0.00187
Epoch : 020, Training loss : 0.00184
																				 [conv3] pruned rate : 80%, #pruned channels : 102
																				 Top-1 accuracy : 90.87%, Top-5 accuracy : 99.26%

----- pruned rate : 90%, #pruned channels : 115 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75],
       device='cuda:0')
pruned_weight.shape : torch.Size([13, 64, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([128, 13, 3, 3])
Epoch : 001, Training loss : 0.11681
Epoch : 002, Training loss : 0.02772
Epoch : 003, Training loss : 0.01628
Epoch : 004, Training loss : 0.01126
Epoch : 005, Training loss : 0.00918
Epoch : 006, Training loss : 0.00655
Epoch : 007, Training loss : 0.00631
Epoch : 008, Training loss : 0.00465
Epoch : 009, Training loss : 0.00401
Epoch : 010, Training loss : 0.00386
Epoch : 011, Training loss : 0.00353
Epoch : 012, Training loss : 0.00274
Epoch : 013, Training loss : 0.00265
Epoch : 014, Training loss : 0.00255
Epoch : 015, Training loss : 0.00217
Epoch : 016, Training loss : 0.00219
Epoch : 017, Training loss : 0.00209
Epoch : 018, Training loss : 0.00204
Epoch : 019, Training loss : 0.00198
Epoch : 020, Training loss : 0.00191
																				 [conv3] pruned rate : 90%, #pruned channels : 115
																				 Top-1 accuracy : 90.07%, Top-5 accuracy : 99.17%

----- pruned rate : 95%, #pruned channels : 122 -----
weight.shape : torch.Size([128, 64, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([ 88, 105,  84,  10, 127,  53,  39,  83,  52,  25,  65,  31,  75,  19,
         11,  92, 101, 113, 112, 115,  40,  26,  27,  87,  77,  62,  90,  69,
          5,  95,  72,  36,  81,  89,  13,  63, 110,  44,  15,  37, 104,  80,
         21,  30,  91,  54,  78, 114,   2,  23,  86,  79,  42, 103,  99,   7,
         35, 116,   0, 111, 100,  82,  96,  49, 106, 123, 108,  38, 117,  32,
        109,  14,  33,   4,  74,  47,  51,  12,  41, 102,  94,  66,  17,  60,
          1,  98,  67,  71,  28,  18, 125,  16,  29,  85,   9, 107, 120, 121,
         76,  55, 124,  22,  24,   3,  46, 122,  48, 118,  20,  70,  73, 126,
         93,  34,  57,  59,  58, 119,  45,  50,  61,  68,   8,  97,  56,   6,
         43,  64], device='cuda:0')
saving_filter_idices : tensor([ 88, 105,  84,  10, 127,  53], device='cuda:0')
pruned_weight.shape : torch.Size([6, 64, 3, 3])
pruned_bias.shape : torch.Size([6])
pruned_bn_gamma.shape : torch.Size([6])
pruned_bn_beta.shape : torch.Size([6])
pruned_bn_running_mean.shape : torch.Size([6])
pruned_bn_running_var.shape : torch.Size([6])
pruned_next_weight.shape : torch.Size([128, 6, 3, 3])
Epoch : 001, Training loss : 0.28223
Epoch : 002, Training loss : 0.06533
Epoch : 003, Training loss : 0.03719
Epoch : 004, Training loss : 0.02361
Epoch : 005, Training loss : 0.02001
Epoch : 006, Training loss : 0.01433
Epoch : 007, Training loss : 0.01142
Epoch : 008, Training loss : 0.00895
Epoch : 009, Training loss : 0.00806
Epoch : 010, Training loss : 0.00700
Epoch : 011, Training loss : 0.00572
Epoch : 012, Training loss : 0.00639
Epoch : 013, Training loss : 0.00698
Epoch : 014, Training loss : 0.00495
Epoch : 015, Training loss : 0.00596
Epoch : 016, Training loss : 0.00517
Epoch : 017, Training loss : 0.00578
Epoch : 018, Training loss : 0.00412
Epoch : 019, Training loss : 0.00478
Epoch : 020, Training loss : 0.00529
																				 [conv3] pruned rate : 95%, #pruned channels : 122
																				 Top-1 accuracy : 88.88%, Top-5 accuracy : 99.03%
========================================  conv4  ========================================

----- pruned rate : 10%, #pruned channels : 13 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49], device='cuda:0')
pruned_weight.shape : torch.Size([115, 128, 3, 3])
pruned_bias.shape : torch.Size([115])
pruned_bn_gamma.shape : torch.Size([115])
pruned_bn_beta.shape : torch.Size([115])
pruned_bn_running_mean.shape : torch.Size([115])
pruned_bn_running_var.shape : torch.Size([115])
pruned_next_weight.shape : torch.Size([256, 115, 3, 3])
Epoch : 001, Training loss : 0.00180
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00180
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00175
																				 [conv4] pruned rate : 10%, #pruned channels : 13
																				 Top-1 accuracy : 91.47%, Top-5 accuracy : 99.37%

----- pruned rate : 20%, #pruned channels : 26 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89], device='cuda:0')
pruned_weight.shape : torch.Size([102, 128, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([256, 102, 3, 3])
Epoch : 001, Training loss : 0.00244
Epoch : 002, Training loss : 0.00198
Epoch : 003, Training loss : 0.00207
Epoch : 004, Training loss : 0.00191
Epoch : 005, Training loss : 0.00184
Epoch : 006, Training loss : 0.00185
Epoch : 007, Training loss : 0.00180
Epoch : 008, Training loss : 0.00196
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00191
Epoch : 011, Training loss : 0.00185
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00181
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00183
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv4] pruned rate : 20%, #pruned channels : 26
																				 Top-1 accuracy : 91.26%, Top-5 accuracy : 99.28%

----- pruned rate : 30%, #pruned channels : 38 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9], device='cuda:0')
pruned_weight.shape : torch.Size([90, 128, 3, 3])
pruned_bias.shape : torch.Size([90])
pruned_bn_gamma.shape : torch.Size([90])
pruned_bn_beta.shape : torch.Size([90])
pruned_bn_running_mean.shape : torch.Size([90])
pruned_bn_running_var.shape : torch.Size([90])
pruned_next_weight.shape : torch.Size([256, 90, 3, 3])
Epoch : 001, Training loss : 0.00415
Epoch : 002, Training loss : 0.00286
Epoch : 003, Training loss : 0.00253
Epoch : 004, Training loss : 0.00220
Epoch : 005, Training loss : 0.00194
Epoch : 006, Training loss : 0.00201
Epoch : 007, Training loss : 0.00198
Epoch : 008, Training loss : 0.00186
Epoch : 009, Training loss : 0.00186
Epoch : 010, Training loss : 0.00189
Epoch : 011, Training loss : 0.00185
Epoch : 012, Training loss : 0.00185
Epoch : 013, Training loss : 0.00183
Epoch : 014, Training loss : 0.00184
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00188
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00180
																				 [conv4] pruned rate : 30%, #pruned channels : 38
																				 Top-1 accuracy : 91.37%, Top-5 accuracy : 99.27%

----- pruned rate : 40%, #pruned channels : 51 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78], device='cuda:0')
pruned_weight.shape : torch.Size([77, 128, 3, 3])
pruned_bias.shape : torch.Size([77])
pruned_bn_gamma.shape : torch.Size([77])
pruned_bn_beta.shape : torch.Size([77])
pruned_bn_running_mean.shape : torch.Size([77])
pruned_bn_running_var.shape : torch.Size([77])
pruned_next_weight.shape : torch.Size([256, 77, 3, 3])
Epoch : 001, Training loss : 0.00759
Epoch : 002, Training loss : 0.00483
Epoch : 003, Training loss : 0.00347
Epoch : 004, Training loss : 0.00292
Epoch : 005, Training loss : 0.00284
Epoch : 006, Training loss : 0.00217
Epoch : 007, Training loss : 0.00221
Epoch : 008, Training loss : 0.00205
Epoch : 009, Training loss : 0.00208
Epoch : 010, Training loss : 0.00209
Epoch : 011, Training loss : 0.00200
Epoch : 012, Training loss : 0.00193
Epoch : 013, Training loss : 0.00189
Epoch : 014, Training loss : 0.00188
Epoch : 015, Training loss : 0.00190
Epoch : 016, Training loss : 0.00185
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00183
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00180
																				 [conv4] pruned rate : 40%, #pruned channels : 51
																				 Top-1 accuracy : 90.99%, Top-5 accuracy : 99.22%

----- pruned rate : 50%, #pruned channels : 64 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34], device='cuda:0')
pruned_weight.shape : torch.Size([64, 128, 3, 3])
pruned_bias.shape : torch.Size([64])
pruned_bn_gamma.shape : torch.Size([64])
pruned_bn_beta.shape : torch.Size([64])
pruned_bn_running_mean.shape : torch.Size([64])
pruned_bn_running_var.shape : torch.Size([64])
pruned_next_weight.shape : torch.Size([256, 64, 3, 3])
Epoch : 001, Training loss : 0.01821
Epoch : 002, Training loss : 0.00863
Epoch : 003, Training loss : 0.00546
Epoch : 004, Training loss : 0.00362
Epoch : 005, Training loss : 0.00282
Epoch : 006, Training loss : 0.00285
Epoch : 007, Training loss : 0.00241
Epoch : 008, Training loss : 0.00219
Epoch : 009, Training loss : 0.00214
Epoch : 010, Training loss : 0.00226
Epoch : 011, Training loss : 0.00206
Epoch : 012, Training loss : 0.00199
Epoch : 013, Training loss : 0.00197
Epoch : 014, Training loss : 0.00191
Epoch : 015, Training loss : 0.00189
Epoch : 016, Training loss : 0.00188
Epoch : 017, Training loss : 0.00187
Epoch : 018, Training loss : 0.00183
Epoch : 019, Training loss : 0.00183
Epoch : 020, Training loss : 0.00184
																				 [conv4] pruned rate : 50%, #pruned channels : 64
																				 Top-1 accuracy : 91.00%, Top-5 accuracy : 99.31%

----- pruned rate : 60%, #pruned channels : 77 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85], device='cuda:0')
pruned_weight.shape : torch.Size([51, 128, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([256, 51, 3, 3])
Epoch : 001, Training loss : 0.04138
Epoch : 002, Training loss : 0.01345
Epoch : 003, Training loss : 0.00898
Epoch : 004, Training loss : 0.00697
Epoch : 005, Training loss : 0.00490
Epoch : 006, Training loss : 0.00367
Epoch : 007, Training loss : 0.00341
Epoch : 008, Training loss : 0.00270
Epoch : 009, Training loss : 0.00253
Epoch : 010, Training loss : 0.00215
Epoch : 011, Training loss : 0.00221
Epoch : 012, Training loss : 0.00207
Epoch : 013, Training loss : 0.00199
Epoch : 014, Training loss : 0.00194
Epoch : 015, Training loss : 0.00195
Epoch : 016, Training loss : 0.00186
Epoch : 017, Training loss : 0.00191
Epoch : 018, Training loss : 0.00194
Epoch : 019, Training loss : 0.00190
Epoch : 020, Training loss : 0.00185
																				 [conv4] pruned rate : 60%, #pruned channels : 77
																				 Top-1 accuracy : 90.87%, Top-5 accuracy : 99.28%

----- pruned rate : 70%, #pruned channels : 90 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66], device='cuda:0')
pruned_weight.shape : torch.Size([38, 128, 3, 3])
pruned_bias.shape : torch.Size([38])
pruned_bn_gamma.shape : torch.Size([38])
pruned_bn_beta.shape : torch.Size([38])
pruned_bn_running_mean.shape : torch.Size([38])
pruned_bn_running_var.shape : torch.Size([38])
pruned_next_weight.shape : torch.Size([256, 38, 3, 3])
Epoch : 001, Training loss : 0.07831
Epoch : 002, Training loss : 0.02225
Epoch : 003, Training loss : 0.01487
Epoch : 004, Training loss : 0.00868
Epoch : 005, Training loss : 0.00705
Epoch : 006, Training loss : 0.00684
Epoch : 007, Training loss : 0.00418
Epoch : 008, Training loss : 0.00443
Epoch : 009, Training loss : 0.00398
Epoch : 010, Training loss : 0.00347
Epoch : 011, Training loss : 0.00273
Epoch : 012, Training loss : 0.00251
Epoch : 013, Training loss : 0.00238
Epoch : 014, Training loss : 0.00223
Epoch : 015, Training loss : 0.00214
Epoch : 016, Training loss : 0.00211
Epoch : 017, Training loss : 0.00208
Epoch : 018, Training loss : 0.00193
Epoch : 019, Training loss : 0.00194
Epoch : 020, Training loss : 0.00189
																				 [conv4] pruned rate : 70%, #pruned channels : 90
																				 Top-1 accuracy : 90.58%, Top-5 accuracy : 99.23%

----- pruned rate : 80%, #pruned channels : 102 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 128, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([256, 26, 3, 3])
Epoch : 001, Training loss : 0.14738
Epoch : 002, Training loss : 0.04087
Epoch : 003, Training loss : 0.02512
Epoch : 004, Training loss : 0.01524
Epoch : 005, Training loss : 0.01342
Epoch : 006, Training loss : 0.00869
Epoch : 007, Training loss : 0.00662
Epoch : 008, Training loss : 0.00620
Epoch : 009, Training loss : 0.00586
Epoch : 010, Training loss : 0.00493
Epoch : 011, Training loss : 0.00480
Epoch : 012, Training loss : 0.00410
Epoch : 013, Training loss : 0.00457
Epoch : 014, Training loss : 0.00385
Epoch : 015, Training loss : 0.00341
Epoch : 016, Training loss : 0.00340
Epoch : 017, Training loss : 0.00342
Epoch : 018, Training loss : 0.00282
Epoch : 019, Training loss : 0.00263
Epoch : 020, Training loss : 0.00265
																				 [conv4] pruned rate : 80%, #pruned channels : 102
																				 Top-1 accuracy : 90.32%, Top-5 accuracy : 99.10%

----- pruned rate : 90%, #pruned channels : 115 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11],
       device='cuda:0')
pruned_weight.shape : torch.Size([13, 128, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([256, 13, 3, 3])
Epoch : 001, Training loss : 0.30351
Epoch : 002, Training loss : 0.09721
Epoch : 003, Training loss : 0.05834
Epoch : 004, Training loss : 0.03659
Epoch : 005, Training loss : 0.02912
Epoch : 006, Training loss : 0.02201
Epoch : 007, Training loss : 0.01666
Epoch : 008, Training loss : 0.01300
Epoch : 009, Training loss : 0.01103
Epoch : 010, Training loss : 0.00954
Epoch : 011, Training loss : 0.01179
Epoch : 012, Training loss : 0.01178
Epoch : 013, Training loss : 0.01149
Epoch : 014, Training loss : 0.00984
Epoch : 015, Training loss : 0.00936
Epoch : 016, Training loss : 0.00805
Epoch : 017, Training loss : 0.00664
Epoch : 018, Training loss : 0.00629
Epoch : 019, Training loss : 0.00638
Epoch : 020, Training loss : 0.00501
																				 [conv4] pruned rate : 90%, #pruned channels : 115
																				 Top-1 accuracy : 89.42%, Top-5 accuracy : 98.98%

----- pruned rate : 95%, #pruned channels : 122 -----
weight.shape : torch.Size([128, 128, 3, 3])
bias.shape : torch.Size([128])
bn_gamma.shape : torch.Size([128])
bn_beta.shape : torch.Size([128])
bn_running_mean.shape : torch.Size([128])
bn_running_var.shape : torch.Size([128])
sorted_weight_indices : tensor([  8,  72,   7,  88, 105,  76,  19,  33,  92, 127, 109, 123,  11,  56,
         46,  17,  38,  50,  69,   3,  18,  54, 120,  26,  25,   6, 104,  28,
         39,  94,  60, 119,  30, 110,  57,  63, 111,  66,  53,  55,  15,  80,
         70, 112,  58,  36,   5,   0,  71,  68,  85,  37, 101,  52,  77,  61,
         64, 115, 116,  31,  41,  14,  86,  34,  32,  29,  59,  67, 102, 103,
         87,  91,  20, 117, 121, 122,  78,  22,  24, 113,  99, 100, 118,  98,
         13,  21, 124,  47,  84,   9, 108,  23,  16,  95,  40,   1, 125, 114,
         93, 106,   2,  89,  12,  82,  83,  81,  10,  44, 126,  35,  74,  27,
        107,  79,  49,  65,  48,  43,  45,  96,  42,  90,  62,  75,   4,  73,
         97,  51], device='cuda:0')
saving_filter_idices : tensor([  8,  72,   7,  88, 105,  76], device='cuda:0')
pruned_weight.shape : torch.Size([6, 128, 3, 3])
pruned_bias.shape : torch.Size([6])
pruned_bn_gamma.shape : torch.Size([6])
pruned_bn_beta.shape : torch.Size([6])
pruned_bn_running_mean.shape : torch.Size([6])
pruned_bn_running_var.shape : torch.Size([6])
pruned_next_weight.shape : torch.Size([256, 6, 3, 3])
Epoch : 001, Training loss : 0.61324
Epoch : 002, Training loss : 0.24691
Epoch : 003, Training loss : 0.15815
Epoch : 004, Training loss : 0.11282
Epoch : 005, Training loss : 0.08389
Epoch : 006, Training loss : 0.06353
Epoch : 007, Training loss : 0.05258
Epoch : 008, Training loss : 0.04296
Epoch : 009, Training loss : 0.03562
Epoch : 010, Training loss : 0.03152
Epoch : 011, Training loss : 0.02652
Epoch : 012, Training loss : 0.02671
Epoch : 013, Training loss : 0.02122
Epoch : 014, Training loss : 0.02377
Epoch : 015, Training loss : 0.01999
Epoch : 016, Training loss : 0.01779
Epoch : 017, Training loss : 0.01905
Epoch : 018, Training loss : 0.01722
Epoch : 019, Training loss : 0.01352
Epoch : 020, Training loss : 0.01387
																				 [conv4] pruned rate : 95%, #pruned channels : 122
																				 Top-1 accuracy : 87.52%, Top-5 accuracy : 99.02%
========================================  conv5  ========================================

----- pruned rate : 10%, #pruned channels : 26 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101], device='cuda:0')
pruned_weight.shape : torch.Size([230, 128, 3, 3])
pruned_bias.shape : torch.Size([230])
pruned_bn_gamma.shape : torch.Size([230])
pruned_bn_beta.shape : torch.Size([230])
pruned_bn_running_mean.shape : torch.Size([230])
pruned_bn_running_var.shape : torch.Size([230])
pruned_next_weight.shape : torch.Size([256, 230, 3, 3])
Epoch : 001, Training loss : 0.00180
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00182
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00175
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00181
																				 [conv5] pruned rate : 10%, #pruned channels : 26
																				 Top-1 accuracy : 91.62%, Top-5 accuracy : 99.37%

----- pruned rate : 20%, #pruned channels : 51 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32], device='cuda:0')
pruned_weight.shape : torch.Size([205, 128, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([256, 205, 3, 3])
Epoch : 001, Training loss : 0.00196
Epoch : 002, Training loss : 0.00205
Epoch : 003, Training loss : 0.00190
Epoch : 004, Training loss : 0.00189
Epoch : 005, Training loss : 0.00185
Epoch : 006, Training loss : 0.00187
Epoch : 007, Training loss : 0.00182
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00183
Epoch : 011, Training loss : 0.00182
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00176
																				 [conv5] pruned rate : 20%, #pruned channels : 51
																				 Top-1 accuracy : 91.60%, Top-5 accuracy : 99.29%

----- pruned rate : 30%, #pruned channels : 77 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74],
       device='cuda:0')
pruned_weight.shape : torch.Size([179, 128, 3, 3])
pruned_bias.shape : torch.Size([179])
pruned_bn_gamma.shape : torch.Size([179])
pruned_bn_beta.shape : torch.Size([179])
pruned_bn_running_mean.shape : torch.Size([179])
pruned_bn_running_var.shape : torch.Size([179])
pruned_next_weight.shape : torch.Size([256, 179, 3, 3])
Epoch : 001, Training loss : 0.00245
Epoch : 002, Training loss : 0.00213
Epoch : 003, Training loss : 0.00199
Epoch : 004, Training loss : 0.00200
Epoch : 005, Training loss : 0.00188
Epoch : 006, Training loss : 0.00186
Epoch : 007, Training loss : 0.00183
Epoch : 008, Training loss : 0.00184
Epoch : 009, Training loss : 0.00182
Epoch : 010, Training loss : 0.00190
Epoch : 011, Training loss : 0.00184
Epoch : 012, Training loss : 0.00185
Epoch : 013, Training loss : 0.00189
Epoch : 014, Training loss : 0.00186
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00182
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00182
Epoch : 020, Training loss : 0.00179
																				 [conv5] pruned rate : 30%, #pruned channels : 77
																				 Top-1 accuracy : 91.32%, Top-5 accuracy : 99.24%

----- pruned rate : 40%, #pruned channels : 102 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 128, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([256, 154, 3, 3])
Epoch : 001, Training loss : 0.00431
Epoch : 002, Training loss : 0.00326
Epoch : 003, Training loss : 0.00256
Epoch : 004, Training loss : 0.00244
Epoch : 005, Training loss : 0.00231
Epoch : 006, Training loss : 0.00211
Epoch : 007, Training loss : 0.00198
Epoch : 008, Training loss : 0.00189
Epoch : 009, Training loss : 0.00190
Epoch : 010, Training loss : 0.00185
Epoch : 011, Training loss : 0.00183
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00187
Epoch : 014, Training loss : 0.00188
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00182
Epoch : 020, Training loss : 0.00182
																				 [conv5] pruned rate : 40%, #pruned channels : 102
																				 Top-1 accuracy : 90.94%, Top-5 accuracy : 99.17%

----- pruned rate : 50%, #pruned channels : 128 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17], device='cuda:0')
pruned_weight.shape : torch.Size([128, 128, 3, 3])
pruned_bias.shape : torch.Size([128])
pruned_bn_gamma.shape : torch.Size([128])
pruned_bn_beta.shape : torch.Size([128])
pruned_bn_running_mean.shape : torch.Size([128])
pruned_bn_running_var.shape : torch.Size([128])
pruned_next_weight.shape : torch.Size([256, 128, 3, 3])
Epoch : 001, Training loss : 0.01218
Epoch : 002, Training loss : 0.00614
Epoch : 003, Training loss : 0.00437
Epoch : 004, Training loss : 0.00310
Epoch : 005, Training loss : 0.00252
Epoch : 006, Training loss : 0.00243
Epoch : 007, Training loss : 0.00209
Epoch : 008, Training loss : 0.00209
Epoch : 009, Training loss : 0.00190
Epoch : 010, Training loss : 0.00190
Epoch : 011, Training loss : 0.00198
Epoch : 012, Training loss : 0.00190
Epoch : 013, Training loss : 0.00186
Epoch : 014, Training loss : 0.00183
Epoch : 015, Training loss : 0.00191
Epoch : 016, Training loss : 0.00188
Epoch : 017, Training loss : 0.00186
Epoch : 018, Training loss : 0.00186
Epoch : 019, Training loss : 0.00184
Epoch : 020, Training loss : 0.00183
																				 [conv5] pruned rate : 50%, #pruned channels : 128
																				 Top-1 accuracy : 91.13%, Top-5 accuracy : 99.13%

----- pruned rate : 60%, #pruned channels : 154 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160], device='cuda:0')
pruned_weight.shape : torch.Size([102, 128, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([256, 102, 3, 3])
Epoch : 001, Training loss : 0.02307
Epoch : 002, Training loss : 0.01114
Epoch : 003, Training loss : 0.00528
Epoch : 004, Training loss : 0.00421
Epoch : 005, Training loss : 0.00336
Epoch : 006, Training loss : 0.00340
Epoch : 007, Training loss : 0.00247
Epoch : 008, Training loss : 0.00227
Epoch : 009, Training loss : 0.00243
Epoch : 010, Training loss : 0.00210
Epoch : 011, Training loss : 0.00207
Epoch : 012, Training loss : 0.00200
Epoch : 013, Training loss : 0.00207
Epoch : 014, Training loss : 0.00200
Epoch : 015, Training loss : 0.00190
Epoch : 016, Training loss : 0.00193
Epoch : 017, Training loss : 0.00205
Epoch : 018, Training loss : 0.00184
Epoch : 019, Training loss : 0.00184
Epoch : 020, Training loss : 0.00185
																				 [conv5] pruned rate : 60%, #pruned channels : 154
																				 Top-1 accuracy : 90.68%, Top-5 accuracy : 99.07%

----- pruned rate : 70%, #pruned channels : 179 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237], device='cuda:0')
pruned_weight.shape : torch.Size([77, 128, 3, 3])
pruned_bias.shape : torch.Size([77])
pruned_bn_gamma.shape : torch.Size([77])
pruned_bn_beta.shape : torch.Size([77])
pruned_bn_running_mean.shape : torch.Size([77])
pruned_bn_running_var.shape : torch.Size([77])
pruned_next_weight.shape : torch.Size([256, 77, 3, 3])
Epoch : 001, Training loss : 0.04672
Epoch : 002, Training loss : 0.01650
Epoch : 003, Training loss : 0.00812
Epoch : 004, Training loss : 0.00787
Epoch : 005, Training loss : 0.00494
Epoch : 006, Training loss : 0.00459
Epoch : 007, Training loss : 0.00346
Epoch : 008, Training loss : 0.00328
Epoch : 009, Training loss : 0.00317
Epoch : 010, Training loss : 0.00300
Epoch : 011, Training loss : 0.00223
Epoch : 012, Training loss : 0.00207
Epoch : 013, Training loss : 0.00207
Epoch : 014, Training loss : 0.00195
Epoch : 015, Training loss : 0.00192
Epoch : 016, Training loss : 0.00191
Epoch : 017, Training loss : 0.00188
Epoch : 018, Training loss : 0.00190
Epoch : 019, Training loss : 0.00186
Epoch : 020, Training loss : 0.00187
																				 [conv5] pruned rate : 70%, #pruned channels : 179
																				 Top-1 accuracy : 91.04%, Top-5 accuracy : 99.04%

----- pruned rate : 80%, #pruned channels : 205 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82], device='cuda:0')
pruned_weight.shape : torch.Size([51, 128, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([256, 51, 3, 3])
Epoch : 001, Training loss : 0.09491
Epoch : 002, Training loss : 0.02929
Epoch : 003, Training loss : 0.01717
Epoch : 004, Training loss : 0.01260
Epoch : 005, Training loss : 0.00765
Epoch : 006, Training loss : 0.00804
Epoch : 007, Training loss : 0.00592
Epoch : 008, Training loss : 0.00532
Epoch : 009, Training loss : 0.00511
Epoch : 010, Training loss : 0.00516
Epoch : 011, Training loss : 0.00434
Epoch : 012, Training loss : 0.00442
Epoch : 013, Training loss : 0.00321
Epoch : 014, Training loss : 0.00336
Epoch : 015, Training loss : 0.00293
Epoch : 016, Training loss : 0.00271
Epoch : 017, Training loss : 0.00240
Epoch : 018, Training loss : 0.00246
Epoch : 019, Training loss : 0.00239
Epoch : 020, Training loss : 0.00212
																				 [conv5] pruned rate : 80%, #pruned channels : 205
																				 Top-1 accuracy : 90.56%, Top-5 accuracy : 99.22%

----- pruned rate : 90%, #pruned channels : 230 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 128, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([256, 26, 3, 3])
Epoch : 001, Training loss : 0.23101
Epoch : 002, Training loss : 0.06657
Epoch : 003, Training loss : 0.03841
Epoch : 004, Training loss : 0.02478
Epoch : 005, Training loss : 0.01797
Epoch : 006, Training loss : 0.01566
Epoch : 007, Training loss : 0.01170
Epoch : 008, Training loss : 0.01056
Epoch : 009, Training loss : 0.00867
Epoch : 010, Training loss : 0.00908
Epoch : 011, Training loss : 0.00595
Epoch : 012, Training loss : 0.00605
Epoch : 013, Training loss : 0.00498
Epoch : 014, Training loss : 0.00600
Epoch : 015, Training loss : 0.00584
Epoch : 016, Training loss : 0.00536
Epoch : 017, Training loss : 0.00515
Epoch : 018, Training loss : 0.00688
Epoch : 019, Training loss : 0.00556
Epoch : 020, Training loss : 0.00748
																				 [conv5] pruned rate : 90%, #pruned channels : 230
																				 Top-1 accuracy : 89.27%, Top-5 accuracy : 98.95%

----- pruned rate : 95%, #pruned channels : 243 -----
weight.shape : torch.Size([256, 128, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94, 109,
        233,   1,  85,  14,  44, 174, 151,  33,  61,  55, 205,  58, 190, 217,
         36, 186, 127, 113,  56, 180, 104, 207, 202,  69, 130, 181, 107, 105,
        201, 215,  68,  84,  46, 219,  79, 209,  82,  80, 249, 139,  98,   7,
        210,   2,  20,  37, 124,  23,  43, 176, 110, 254, 165,  49, 100, 132,
        204,  10,  67,  18, 194,  53, 237, 116, 198, 159,  73, 244, 154, 188,
        182, 168, 169, 242, 125, 146, 102, 191,  57,  27, 236,  22, 187, 211,
         39,  48,  72, 160,  89, 213,  29, 120,  26, 161, 251, 238,  12, 175,
         30, 247, 206, 223,  64, 123,  31, 135, 199,  41, 227, 173, 234, 141,
        221,  17,  24, 179, 196, 171, 106, 243,  47,  16,  59,  51,  70,  65,
          6, 103,  42, 148,  87, 172,  35, 128, 117, 226,  52, 189, 250, 203,
        137, 222, 185, 218, 239, 119, 144, 121,  88, 136, 157, 220,  97, 183,
         96, 214, 149, 126, 170, 162,  50,  91, 240, 112,  74,  45, 248, 158,
        150, 241,  99,   0,  90, 177,  92, 152,   3,  34, 156,  11, 246,  54,
        108, 131,  81, 195,  40,   9, 129,  77,  32, 147, 122,  76,  66,  95,
         93, 193,  13,  78, 155, 225, 216, 228, 153, 143,  25, 192, 142,  21,
        145,   8, 140, 255, 229, 101,  83,  62,   5, 245, 114, 134, 163,  19,
         60, 197, 208, 212, 231,  75, 167, 232, 200, 118, 184, 138, 253, 111,
        235, 224, 178,  86], device='cuda:0')
saving_filter_idices : tensor([ 15,  71, 166, 252,  38,   4,  28, 133, 164, 115, 230,  63,  94],
       device='cuda:0')
pruned_weight.shape : torch.Size([13, 128, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([256, 13, 3, 3])
Epoch : 001, Training loss : 0.43380
Epoch : 002, Training loss : 0.14100
Epoch : 003, Training loss : 0.08466
Epoch : 004, Training loss : 0.05571
Epoch : 005, Training loss : 0.03923
Epoch : 006, Training loss : 0.03117
Epoch : 007, Training loss : 0.02784
Epoch : 008, Training loss : 0.02201
Epoch : 009, Training loss : 0.01906
Epoch : 010, Training loss : 0.01674
Epoch : 011, Training loss : 0.01399
Epoch : 012, Training loss : 0.01358
Epoch : 013, Training loss : 0.01049
Epoch : 014, Training loss : 0.01084
Epoch : 015, Training loss : 0.00904
Epoch : 016, Training loss : 0.01034
Epoch : 017, Training loss : 0.01132
Epoch : 018, Training loss : 0.00747
Epoch : 019, Training loss : 0.01086
Epoch : 020, Training loss : 0.01288
																				 [conv5] pruned rate : 95%, #pruned channels : 243
																				 Top-1 accuracy : 88.85%, Top-5 accuracy : 99.11%
========================================  conv6  ========================================

----- pruned rate : 10%, #pruned channels : 26 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60], device='cuda:0')
pruned_weight.shape : torch.Size([230, 256, 3, 3])
pruned_bias.shape : torch.Size([230])
pruned_bn_gamma.shape : torch.Size([230])
pruned_bn_beta.shape : torch.Size([230])
pruned_bn_running_mean.shape : torch.Size([230])
pruned_bn_running_var.shape : torch.Size([230])
pruned_next_weight.shape : torch.Size([256, 230, 3, 3])
Epoch : 001, Training loss : 0.00179
Epoch : 002, Training loss : 0.00181
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00176
																				 [conv6] pruned rate : 10%, #pruned channels : 26
																				 Top-1 accuracy : 91.67%, Top-5 accuracy : 99.37%

----- pruned rate : 20%, #pruned channels : 51 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151], device='cuda:0')
pruned_weight.shape : torch.Size([205, 256, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([256, 205, 3, 3])
Epoch : 001, Training loss : 0.00201
Epoch : 002, Training loss : 0.00194
Epoch : 003, Training loss : 0.00183
Epoch : 004, Training loss : 0.00183
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00181
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00185
Epoch : 010, Training loss : 0.00181
Epoch : 011, Training loss : 0.00181
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00181
																				 [conv6] pruned rate : 20%, #pruned channels : 51
																				 Top-1 accuracy : 91.52%, Top-5 accuracy : 99.30%

----- pruned rate : 30%, #pruned channels : 77 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125],
       device='cuda:0')
pruned_weight.shape : torch.Size([179, 256, 3, 3])
pruned_bias.shape : torch.Size([179])
pruned_bn_gamma.shape : torch.Size([179])
pruned_bn_beta.shape : torch.Size([179])
pruned_bn_running_mean.shape : torch.Size([179])
pruned_bn_running_var.shape : torch.Size([179])
pruned_next_weight.shape : torch.Size([256, 179, 3, 3])
Epoch : 001, Training loss : 0.00292
Epoch : 002, Training loss : 0.00211
Epoch : 003, Training loss : 0.00205
Epoch : 004, Training loss : 0.00212
Epoch : 005, Training loss : 0.00201
Epoch : 006, Training loss : 0.00192
Epoch : 007, Training loss : 0.00183
Epoch : 008, Training loss : 0.00183
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00184
Epoch : 011, Training loss : 0.00183
Epoch : 012, Training loss : 0.00181
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00181
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00180
																				 [conv6] pruned rate : 30%, #pruned channels : 77
																				 Top-1 accuracy : 91.47%, Top-5 accuracy : 99.27%

----- pruned rate : 40%, #pruned channels : 102 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 256, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([256, 154, 3, 3])
Epoch : 001, Training loss : 0.00436
Epoch : 002, Training loss : 0.00326
Epoch : 003, Training loss : 0.00248
Epoch : 004, Training loss : 0.00238
Epoch : 005, Training loss : 0.00239
Epoch : 006, Training loss : 0.00227
Epoch : 007, Training loss : 0.00207
Epoch : 008, Training loss : 0.00196
Epoch : 009, Training loss : 0.00199
Epoch : 010, Training loss : 0.00190
Epoch : 011, Training loss : 0.00214
Epoch : 012, Training loss : 0.00201
Epoch : 013, Training loss : 0.00185
Epoch : 014, Training loss : 0.00183
Epoch : 015, Training loss : 0.00187
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00183
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00180
																				 [conv6] pruned rate : 40%, #pruned channels : 102
																				 Top-1 accuracy : 91.20%, Top-5 accuracy : 99.40%

----- pruned rate : 50%, #pruned channels : 128 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234], device='cuda:0')
pruned_weight.shape : torch.Size([128, 256, 3, 3])
pruned_bias.shape : torch.Size([128])
pruned_bn_gamma.shape : torch.Size([128])
pruned_bn_beta.shape : torch.Size([128])
pruned_bn_running_mean.shape : torch.Size([128])
pruned_bn_running_var.shape : torch.Size([128])
pruned_next_weight.shape : torch.Size([256, 128, 3, 3])
Epoch : 001, Training loss : 0.01035
Epoch : 002, Training loss : 0.00543
Epoch : 003, Training loss : 0.00313
Epoch : 004, Training loss : 0.00330
Epoch : 005, Training loss : 0.00300
Epoch : 006, Training loss : 0.00235
Epoch : 007, Training loss : 0.00232
Epoch : 008, Training loss : 0.00232
Epoch : 009, Training loss : 0.00196
Epoch : 010, Training loss : 0.00192
Epoch : 011, Training loss : 0.00188
Epoch : 012, Training loss : 0.00190
Epoch : 013, Training loss : 0.00188
Epoch : 014, Training loss : 0.00182
Epoch : 015, Training loss : 0.00184
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00183
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00183
																				 [conv6] pruned rate : 50%, #pruned channels : 128
																				 Top-1 accuracy : 91.09%, Top-5 accuracy : 99.33%

----- pruned rate : 60%, #pruned channels : 154 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48], device='cuda:0')
pruned_weight.shape : torch.Size([102, 256, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([256, 102, 3, 3])
Epoch : 001, Training loss : 0.02379
Epoch : 002, Training loss : 0.01089
Epoch : 003, Training loss : 0.00557
Epoch : 004, Training loss : 0.00442
Epoch : 005, Training loss : 0.00325
Epoch : 006, Training loss : 0.00308
Epoch : 007, Training loss : 0.00249
Epoch : 008, Training loss : 0.00241
Epoch : 009, Training loss : 0.00252
Epoch : 010, Training loss : 0.00222
Epoch : 011, Training loss : 0.00209
Epoch : 012, Training loss : 0.00211
Epoch : 013, Training loss : 0.00193
Epoch : 014, Training loss : 0.00199
Epoch : 015, Training loss : 0.00190
Epoch : 016, Training loss : 0.00187
Epoch : 017, Training loss : 0.00188
Epoch : 018, Training loss : 0.00189
Epoch : 019, Training loss : 0.00188
Epoch : 020, Training loss : 0.00186
																				 [conv6] pruned rate : 60%, #pruned channels : 154
																				 Top-1 accuracy : 90.76%, Top-5 accuracy : 99.27%

----- pruned rate : 70%, #pruned channels : 179 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239], device='cuda:0')
pruned_weight.shape : torch.Size([77, 256, 3, 3])
pruned_bias.shape : torch.Size([77])
pruned_bn_gamma.shape : torch.Size([77])
pruned_bn_beta.shape : torch.Size([77])
pruned_bn_running_mean.shape : torch.Size([77])
pruned_bn_running_var.shape : torch.Size([77])
pruned_next_weight.shape : torch.Size([256, 77, 3, 3])
Epoch : 001, Training loss : 0.05246
Epoch : 002, Training loss : 0.01782
Epoch : 003, Training loss : 0.00869
Epoch : 004, Training loss : 0.00746
Epoch : 005, Training loss : 0.00484
Epoch : 006, Training loss : 0.00442
Epoch : 007, Training loss : 0.00356
Epoch : 008, Training loss : 0.00345
Epoch : 009, Training loss : 0.00334
Epoch : 010, Training loss : 0.00246
Epoch : 011, Training loss : 0.00244
Epoch : 012, Training loss : 0.00233
Epoch : 013, Training loss : 0.00207
Epoch : 014, Training loss : 0.00198
Epoch : 015, Training loss : 0.00194
Epoch : 016, Training loss : 0.00194
Epoch : 017, Training loss : 0.00193
Epoch : 018, Training loss : 0.00192
Epoch : 019, Training loss : 0.00192
Epoch : 020, Training loss : 0.00189
																				 [conv6] pruned rate : 70%, #pruned channels : 179
																				 Top-1 accuracy : 90.90%, Top-5 accuracy : 99.39%

----- pruned rate : 80%, #pruned channels : 205 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254], device='cuda:0')
pruned_weight.shape : torch.Size([51, 256, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([256, 51, 3, 3])
Epoch : 001, Training loss : 0.09874
Epoch : 002, Training loss : 0.02855
Epoch : 003, Training loss : 0.01815
Epoch : 004, Training loss : 0.01123
Epoch : 005, Training loss : 0.00896
Epoch : 006, Training loss : 0.00744
Epoch : 007, Training loss : 0.00550
Epoch : 008, Training loss : 0.00420
Epoch : 009, Training loss : 0.00391
Epoch : 010, Training loss : 0.00312
Epoch : 011, Training loss : 0.00302
Epoch : 012, Training loss : 0.00278
Epoch : 013, Training loss : 0.00241
Epoch : 014, Training loss : 0.00235
Epoch : 015, Training loss : 0.00226
Epoch : 016, Training loss : 0.00238
Epoch : 017, Training loss : 0.00212
Epoch : 018, Training loss : 0.00207
Epoch : 019, Training loss : 0.00203
Epoch : 020, Training loss : 0.00202
																				 [conv6] pruned rate : 80%, #pruned channels : 205
																				 Top-1 accuracy : 90.93%, Top-5 accuracy : 99.29%

----- pruned rate : 90%, #pruned channels : 230 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 256, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([256, 26, 3, 3])
Epoch : 001, Training loss : 0.21549
Epoch : 002, Training loss : 0.06401
Epoch : 003, Training loss : 0.04010
Epoch : 004, Training loss : 0.02585
Epoch : 005, Training loss : 0.02087
Epoch : 006, Training loss : 0.01520
Epoch : 007, Training loss : 0.01302
Epoch : 008, Training loss : 0.00969
Epoch : 009, Training loss : 0.00771
Epoch : 010, Training loss : 0.00789
Epoch : 011, Training loss : 0.00949
Epoch : 012, Training loss : 0.00776
Epoch : 013, Training loss : 0.00742
Epoch : 014, Training loss : 0.00750
Epoch : 015, Training loss : 0.00596
Epoch : 016, Training loss : 0.00576
Epoch : 017, Training loss : 0.00535
Epoch : 018, Training loss : 0.00647
Epoch : 019, Training loss : 0.00604
Epoch : 020, Training loss : 0.00497
																				 [conv6] pruned rate : 90%, #pruned channels : 230
																				 Top-1 accuracy : 90.45%, Top-5 accuracy : 99.24%

----- pruned rate : 95%, #pruned channels : 243 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216, 218,
        102,  83,  63, 150,  47, 247,  49,  77,   4,  62,   6, 129,  44, 236,
        128,  25, 165, 172, 130,  69,  93, 229, 100, 211,  29, 192,  98, 193,
        225, 123,  17, 253, 244, 238,  12, 133, 254, 187, 217, 140,  76, 223,
        198, 141, 126,  79, 157, 168, 163, 118,  81, 196, 114,  58,  36, 203,
        207, 200, 108, 231, 219, 176, 239,  39, 201,  82,  74, 146, 115,  24,
         73,  51, 111, 222, 249,  35, 209, 177,   2, 240,  99,  40,  72, 181,
         84, 248,  85,  48,  91,  21, 169,  20,  75,  10,  37, 112,  26,  53,
         32, 121, 120, 148, 224, 205, 221, 232,  92, 212, 143,  46, 154, 199,
         28, 234, 237,  55,   7,  45,  30, 215, 182,  42, 137,   3, 127,  94,
         80, 228,   8,  14,  43,  95, 136, 124, 122, 204,  70,  22,  64, 230,
        190, 145, 191, 152,  65, 156, 109, 194,  33, 159,  71,  67, 134, 113,
         13, 186, 213, 104,   1, 106,  52,  38, 206, 227, 125,  27, 178, 103,
         41,  57, 241, 107, 214, 185,  18, 189, 116,  78, 246, 101,  19, 167,
        210, 153, 220,  96, 119, 226,  31, 245, 151,  34, 188, 149, 142, 160,
         15, 243,  50, 173, 235, 184, 252,  97,  11, 105,   0,  87, 138, 162,
        233, 110, 161,  59, 139,  60,  54, 255,  90,  23,   9, 208, 164, 166,
        197,  68,  16, 174,  61, 131, 183, 158, 132, 179, 170,   5,  86, 251,
         88, 171, 117, 144], device='cuda:0')
saving_filter_idices : tensor([180, 135, 242,  66, 155, 195,  56, 175, 202, 147,  89, 250, 216],
       device='cuda:0')
pruned_weight.shape : torch.Size([13, 256, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([256, 13, 3, 3])
Epoch : 001, Training loss : 0.40088
Epoch : 002, Training loss : 0.13293
Epoch : 003, Training loss : 0.08216
Epoch : 004, Training loss : 0.05795
Epoch : 005, Training loss : 0.04193
Epoch : 006, Training loss : 0.03360
Epoch : 007, Training loss : 0.02538
Epoch : 008, Training loss : 0.02105
Epoch : 009, Training loss : 0.01831
Epoch : 010, Training loss : 0.01776
Epoch : 011, Training loss : 0.01665
Epoch : 012, Training loss : 0.01403
Epoch : 013, Training loss : 0.01325
Epoch : 014, Training loss : 0.01350
Epoch : 015, Training loss : 0.01313
Epoch : 016, Training loss : 0.01156
Epoch : 017, Training loss : 0.01051
Epoch : 018, Training loss : 0.00983
Epoch : 019, Training loss : 0.00844
Epoch : 020, Training loss : 0.00772
																				 [conv6] pruned rate : 95%, #pruned channels : 243
																				 Top-1 accuracy : 89.54%, Top-5 accuracy : 99.28%
========================================  conv7  ========================================

----- pruned rate : 10%, #pruned channels : 26 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44], device='cuda:0')
pruned_weight.shape : torch.Size([230, 256, 3, 3])
pruned_bias.shape : torch.Size([230])
pruned_bn_gamma.shape : torch.Size([230])
pruned_bn_beta.shape : torch.Size([230])
pruned_bn_running_mean.shape : torch.Size([230])
pruned_bn_running_var.shape : torch.Size([230])
pruned_next_weight.shape : torch.Size([512, 230, 3, 3])
Epoch : 001, Training loss : 0.00180
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00176
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00176
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00177
																				 [conv7] pruned rate : 10%, #pruned channels : 26
																				 Top-1 accuracy : 91.55%, Top-5 accuracy : 99.36%

----- pruned rate : 20%, #pruned channels : 51 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178], device='cuda:0')
pruned_weight.shape : torch.Size([205, 256, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205, 3, 3])
Epoch : 001, Training loss : 0.00188
Epoch : 002, Training loss : 0.00182
Epoch : 003, Training loss : 0.00182
Epoch : 004, Training loss : 0.00182
Epoch : 005, Training loss : 0.00179
Epoch : 006, Training loss : 0.00181
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00183
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00180
																				 [conv7] pruned rate : 20%, #pruned channels : 51
																				 Top-1 accuracy : 91.58%, Top-5 accuracy : 99.36%

----- pruned rate : 30%, #pruned channels : 77 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1],
       device='cuda:0')
pruned_weight.shape : torch.Size([179, 256, 3, 3])
pruned_bias.shape : torch.Size([179])
pruned_bn_gamma.shape : torch.Size([179])
pruned_bn_beta.shape : torch.Size([179])
pruned_bn_running_mean.shape : torch.Size([179])
pruned_bn_running_var.shape : torch.Size([179])
pruned_next_weight.shape : torch.Size([512, 179, 3, 3])
Epoch : 001, Training loss : 0.00226
Epoch : 002, Training loss : 0.00203
Epoch : 003, Training loss : 0.00191
Epoch : 004, Training loss : 0.00184
Epoch : 005, Training loss : 0.00185
Epoch : 006, Training loss : 0.00182
Epoch : 007, Training loss : 0.00187
Epoch : 008, Training loss : 0.00185
Epoch : 009, Training loss : 0.00183
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00181
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00182
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00177
																				 [conv7] pruned rate : 30%, #pruned channels : 77
																				 Top-1 accuracy : 91.51%, Top-5 accuracy : 99.27%

----- pruned rate : 40%, #pruned channels : 102 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 256, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154, 3, 3])
Epoch : 001, Training loss : 0.00350
Epoch : 002, Training loss : 0.00255
Epoch : 003, Training loss : 0.00217
Epoch : 004, Training loss : 0.00207
Epoch : 005, Training loss : 0.00196
Epoch : 006, Training loss : 0.00190
Epoch : 007, Training loss : 0.00192
Epoch : 008, Training loss : 0.00191
Epoch : 009, Training loss : 0.00188
Epoch : 010, Training loss : 0.00190
Epoch : 011, Training loss : 0.00182
Epoch : 012, Training loss : 0.00183
Epoch : 013, Training loss : 0.00184
Epoch : 014, Training loss : 0.00182
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00183
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00179
																				 [conv7] pruned rate : 40%, #pruned channels : 102
																				 Top-1 accuracy : 91.48%, Top-5 accuracy : 99.25%

----- pruned rate : 50%, #pruned channels : 128 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5], device='cuda:0')
pruned_weight.shape : torch.Size([128, 256, 3, 3])
pruned_bias.shape : torch.Size([128])
pruned_bn_gamma.shape : torch.Size([128])
pruned_bn_beta.shape : torch.Size([128])
pruned_bn_running_mean.shape : torch.Size([128])
pruned_bn_running_var.shape : torch.Size([128])
pruned_next_weight.shape : torch.Size([512, 128, 3, 3])
Epoch : 001, Training loss : 0.00705
Epoch : 002, Training loss : 0.00372
Epoch : 003, Training loss : 0.00322
Epoch : 004, Training loss : 0.00282
Epoch : 005, Training loss : 0.00226
Epoch : 006, Training loss : 0.00201
Epoch : 007, Training loss : 0.00203
Epoch : 008, Training loss : 0.00202
Epoch : 009, Training loss : 0.00191
Epoch : 010, Training loss : 0.00204
Epoch : 011, Training loss : 0.00188
Epoch : 012, Training loss : 0.00192
Epoch : 013, Training loss : 0.00189
Epoch : 014, Training loss : 0.00187
Epoch : 015, Training loss : 0.00185
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00185
Epoch : 018, Training loss : 0.00183
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00181
																				 [conv7] pruned rate : 50%, #pruned channels : 128
																				 Top-1 accuracy : 91.19%, Top-5 accuracy : 99.24%

----- pruned rate : 60%, #pruned channels : 154 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131], device='cuda:0')
pruned_weight.shape : torch.Size([102, 256, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102, 3, 3])
Epoch : 001, Training loss : 0.01348
Epoch : 002, Training loss : 0.00619
Epoch : 003, Training loss : 0.00518
Epoch : 004, Training loss : 0.00370
Epoch : 005, Training loss : 0.00361
Epoch : 006, Training loss : 0.00350
Epoch : 007, Training loss : 0.00264
Epoch : 008, Training loss : 0.00274
Epoch : 009, Training loss : 0.00263
Epoch : 010, Training loss : 0.00209
Epoch : 011, Training loss : 0.00218
Epoch : 012, Training loss : 0.00198
Epoch : 013, Training loss : 0.00198
Epoch : 014, Training loss : 0.00193
Epoch : 015, Training loss : 0.00189
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00185
Epoch : 018, Training loss : 0.00184
Epoch : 019, Training loss : 0.00186
Epoch : 020, Training loss : 0.00182
																				 [conv7] pruned rate : 60%, #pruned channels : 154
																				 Top-1 accuracy : 90.90%, Top-5 accuracy : 99.21%

----- pruned rate : 70%, #pruned channels : 179 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77], device='cuda:0')
pruned_weight.shape : torch.Size([77, 256, 3, 3])
pruned_bias.shape : torch.Size([77])
pruned_bn_gamma.shape : torch.Size([77])
pruned_bn_beta.shape : torch.Size([77])
pruned_bn_running_mean.shape : torch.Size([77])
pruned_bn_running_var.shape : torch.Size([77])
pruned_next_weight.shape : torch.Size([512, 77, 3, 3])
Epoch : 001, Training loss : 0.03259
Epoch : 002, Training loss : 0.01350
Epoch : 003, Training loss : 0.00929
Epoch : 004, Training loss : 0.00631
Epoch : 005, Training loss : 0.00419
Epoch : 006, Training loss : 0.00364
Epoch : 007, Training loss : 0.00317
Epoch : 008, Training loss : 0.00288
Epoch : 009, Training loss : 0.00245
Epoch : 010, Training loss : 0.00259
Epoch : 011, Training loss : 0.00221
Epoch : 012, Training loss : 0.00228
Epoch : 013, Training loss : 0.00231
Epoch : 014, Training loss : 0.00219
Epoch : 015, Training loss : 0.00207
Epoch : 016, Training loss : 0.00193
Epoch : 017, Training loss : 0.00193
Epoch : 018, Training loss : 0.00204
Epoch : 019, Training loss : 0.00190
Epoch : 020, Training loss : 0.00235
																				 [conv7] pruned rate : 70%, #pruned channels : 179
																				 Top-1 accuracy : 90.80%, Top-5 accuracy : 99.24%

----- pruned rate : 80%, #pruned channels : 205 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237], device='cuda:0')
pruned_weight.shape : torch.Size([51, 256, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51, 3, 3])
Epoch : 001, Training loss : 0.07060
Epoch : 002, Training loss : 0.02485
Epoch : 003, Training loss : 0.01554
Epoch : 004, Training loss : 0.01064
Epoch : 005, Training loss : 0.00882
Epoch : 006, Training loss : 0.00665
Epoch : 007, Training loss : 0.00456
Epoch : 008, Training loss : 0.00511
Epoch : 009, Training loss : 0.00425
Epoch : 010, Training loss : 0.00367
Epoch : 011, Training loss : 0.00344
Epoch : 012, Training loss : 0.00346
Epoch : 013, Training loss : 0.00300
Epoch : 014, Training loss : 0.00263
Epoch : 015, Training loss : 0.00247
Epoch : 016, Training loss : 0.00237
Epoch : 017, Training loss : 0.00230
Epoch : 018, Training loss : 0.00219
Epoch : 019, Training loss : 0.00202
Epoch : 020, Training loss : 0.00196
																				 [conv7] pruned rate : 80%, #pruned channels : 205
																				 Top-1 accuracy : 90.89%, Top-5 accuracy : 99.11%

----- pruned rate : 90%, #pruned channels : 230 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 256, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26, 3, 3])
Epoch : 001, Training loss : 0.17034
Epoch : 002, Training loss : 0.05845
Epoch : 003, Training loss : 0.03587
Epoch : 004, Training loss : 0.02628
Epoch : 005, Training loss : 0.01864
Epoch : 006, Training loss : 0.01399
Epoch : 007, Training loss : 0.01271
Epoch : 008, Training loss : 0.01199
Epoch : 009, Training loss : 0.00924
Epoch : 010, Training loss : 0.00932
Epoch : 011, Training loss : 0.00823
Epoch : 012, Training loss : 0.00897
Epoch : 013, Training loss : 0.00800
Epoch : 014, Training loss : 0.00572
Epoch : 015, Training loss : 0.00658
Epoch : 016, Training loss : 0.00651
Epoch : 017, Training loss : 0.00635
Epoch : 018, Training loss : 0.00677
Epoch : 019, Training loss : 0.00991
Epoch : 020, Training loss : 0.00799
																				 [conv7] pruned rate : 90%, #pruned channels : 230
																				 Top-1 accuracy : 90.06%, Top-5 accuracy : 99.12%

----- pruned rate : 95%, #pruned channels : 243 -----
weight.shape : torch.Size([256, 256, 3, 3])
bias.shape : torch.Size([256])
bn_gamma.shape : torch.Size([256])
bn_beta.shape : torch.Size([256])
bn_running_mean.shape : torch.Size([256])
bn_running_var.shape : torch.Size([256])
sorted_weight_indices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200, 250,
         32, 160, 171, 236,  53, 162,  64,  55,  20,  38, 114, 216, 119, 235,
         98, 184, 161, 124, 190,  76,  39,  79, 129, 254,  67,  36, 174, 219,
         75,  23,   2, 185, 105,  42,  70, 210, 237, 136, 202,  49, 172, 116,
         37, 229, 118,  91, 154,  74, 179, 245, 167,  30, 121, 142, 243, 104,
         81, 240, 107, 191,  80, 132,  77, 224, 173, 150, 203, 130, 120, 110,
        187,  73, 146, 147, 196, 156,  43, 126,  13, 125,  28, 108,   3, 195,
        249,  58, 180, 131,  34, 230, 183,   0,  27,  52, 215,  63, 128, 151,
        207,  68,  69, 139,  84,   9, 255, 205,  15, 253, 101,  95,  25, 212,
        149,   5, 227, 137,  22,  47, 233,  93, 103,  61, 106,  59, 223, 182,
         86, 192,   7, 226, 166, 148, 189, 239, 204, 102,  33, 159, 234, 112,
        197,  41, 158,  18, 176, 170,  83, 214, 238,  66, 201, 153,  19,  92,
        186, 247, 144, 193, 168, 169, 222, 111, 213, 109,   1,  24,  90, 163,
        138, 133, 221,  78,  51,  17, 127,  57, 217, 164, 225, 155, 175, 117,
         85, 252,  72,  71,  54, 220, 135, 228, 178, 145,   8, 209,  40,   6,
         12, 181, 248, 157,  89, 143, 199,  87, 244, 211,  31, 122, 141, 177,
         16, 123, 113, 242,  97,  44,  14, 241,  82,  10,  35, 194,  96,  88,
        115,   4,  65, 231, 134,  29,  94,  48,  99, 206, 232,  60, 140, 188,
        208,  21, 152, 198], device='cuda:0')
saving_filter_idices : tensor([100, 251,  26, 165,  45,  46,  50, 218, 246,  62,  56,  11, 200],
       device='cuda:0')
pruned_weight.shape : torch.Size([13, 256, 3, 3])
pruned_bias.shape : torch.Size([13])
pruned_bn_gamma.shape : torch.Size([13])
pruned_bn_beta.shape : torch.Size([13])
pruned_bn_running_mean.shape : torch.Size([13])
pruned_bn_running_var.shape : torch.Size([13])
pruned_next_weight.shape : torch.Size([512, 13, 3, 3])
Epoch : 001, Training loss : 0.31569
Epoch : 002, Training loss : 0.11322
Epoch : 003, Training loss : 0.07001
Epoch : 004, Training loss : 0.05162
Epoch : 005, Training loss : 0.03860
Epoch : 006, Training loss : 0.03017
Epoch : 007, Training loss : 0.02944
Epoch : 008, Training loss : 0.02315
Epoch : 009, Training loss : 0.02340
Epoch : 010, Training loss : 0.01802
Epoch : 011, Training loss : 0.01634
Epoch : 012, Training loss : 0.01341
Epoch : 013, Training loss : 0.01363
Epoch : 014, Training loss : 0.01113
Epoch : 015, Training loss : 0.01171
Epoch : 016, Training loss : 0.01178
Epoch : 017, Training loss : 0.01182
Epoch : 018, Training loss : 0.01042
Epoch : 019, Training loss : 0.01126
Epoch : 020, Training loss : 0.01264
																				 [conv7] pruned rate : 95%, #pruned channels : 243
																				 Top-1 accuracy : 89.58%, Top-5 accuracy : 99.16%
========================================  conv8  ========================================

----- pruned rate : 10%, #pruned channels : 51 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113],
       device='cuda:0')
pruned_weight.shape : torch.Size([461, 256, 3, 3])
pruned_bias.shape : torch.Size([461])
pruned_bn_gamma.shape : torch.Size([461])
pruned_bn_beta.shape : torch.Size([461])
pruned_bn_running_mean.shape : torch.Size([461])
pruned_bn_running_var.shape : torch.Size([461])
pruned_next_weight.shape : torch.Size([512, 461, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00176
																				 [conv8] pruned rate : 10%, #pruned channels : 51
																				 Top-1 accuracy : 91.74%, Top-5 accuracy : 99.35%

----- pruned rate : 20%, #pruned channels : 102 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196], device='cuda:0')
pruned_weight.shape : torch.Size([410, 256, 3, 3])
pruned_bias.shape : torch.Size([410])
pruned_bn_gamma.shape : torch.Size([410])
pruned_bn_beta.shape : torch.Size([410])
pruned_bn_running_mean.shape : torch.Size([410])
pruned_bn_running_var.shape : torch.Size([410])
pruned_next_weight.shape : torch.Size([512, 410, 3, 3])
Epoch : 001, Training loss : 0.00182
Epoch : 002, Training loss : 0.00181
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00179
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00175
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00179
																				 [conv8] pruned rate : 20%, #pruned channels : 102
																				 Top-1 accuracy : 91.66%, Top-5 accuracy : 99.35%

----- pruned rate : 30%, #pruned channels : 154 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101], device='cuda:0')
pruned_weight.shape : torch.Size([358, 256, 3, 3])
pruned_bias.shape : torch.Size([358])
pruned_bn_gamma.shape : torch.Size([358])
pruned_bn_beta.shape : torch.Size([358])
pruned_bn_running_mean.shape : torch.Size([358])
pruned_bn_running_var.shape : torch.Size([358])
pruned_next_weight.shape : torch.Size([512, 358, 3, 3])
Epoch : 001, Training loss : 0.00187
Epoch : 002, Training loss : 0.00183
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00182
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00175
																				 [conv8] pruned rate : 30%, #pruned channels : 154
																				 Top-1 accuracy : 91.62%, Top-5 accuracy : 99.25%

----- pruned rate : 40%, #pruned channels : 205 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64],
       device='cuda:0')
pruned_weight.shape : torch.Size([307, 256, 3, 3])
pruned_bias.shape : torch.Size([307])
pruned_bn_gamma.shape : torch.Size([307])
pruned_bn_beta.shape : torch.Size([307])
pruned_bn_running_mean.shape : torch.Size([307])
pruned_bn_running_var.shape : torch.Size([307])
pruned_next_weight.shape : torch.Size([512, 307, 3, 3])
Epoch : 001, Training loss : 0.00205
Epoch : 002, Training loss : 0.00186
Epoch : 003, Training loss : 0.00185
Epoch : 004, Training loss : 0.00183
Epoch : 005, Training loss : 0.00182
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00182
Epoch : 008, Training loss : 0.00182
Epoch : 009, Training loss : 0.00181
Epoch : 010, Training loss : 0.00181
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00182
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00178
																				 [conv8] pruned rate : 40%, #pruned channels : 205
																				 Top-1 accuracy : 91.42%, Top-5 accuracy : 99.29%

----- pruned rate : 50%, #pruned channels : 256 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229], device='cuda:0')
pruned_weight.shape : torch.Size([256, 256, 3, 3])
pruned_bias.shape : torch.Size([256])
pruned_bn_gamma.shape : torch.Size([256])
pruned_bn_beta.shape : torch.Size([256])
pruned_bn_running_mean.shape : torch.Size([256])
pruned_bn_running_var.shape : torch.Size([256])
pruned_next_weight.shape : torch.Size([512, 256, 3, 3])
Epoch : 001, Training loss : 0.00228
Epoch : 002, Training loss : 0.00201
Epoch : 003, Training loss : 0.00192
Epoch : 004, Training loss : 0.00184
Epoch : 005, Training loss : 0.00187
Epoch : 006, Training loss : 0.00187
Epoch : 007, Training loss : 0.00184
Epoch : 008, Training loss : 0.00186
Epoch : 009, Training loss : 0.00190
Epoch : 010, Training loss : 0.00183
Epoch : 011, Training loss : 0.00184
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00181
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00180
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00181
																				 [conv8] pruned rate : 50%, #pruned channels : 256
																				 Top-1 accuracy : 91.47%, Top-5 accuracy : 99.18%

----- pruned rate : 60%, #pruned channels : 307 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140], device='cuda:0')
pruned_weight.shape : torch.Size([205, 256, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205, 3, 3])
Epoch : 001, Training loss : 0.00280
Epoch : 002, Training loss : 0.00211
Epoch : 003, Training loss : 0.00208
Epoch : 004, Training loss : 0.00205
Epoch : 005, Training loss : 0.00192
Epoch : 006, Training loss : 0.00188
Epoch : 007, Training loss : 0.00186
Epoch : 008, Training loss : 0.00186
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00184
Epoch : 011, Training loss : 0.00186
Epoch : 012, Training loss : 0.00181
Epoch : 013, Training loss : 0.00185
Epoch : 014, Training loss : 0.00181
Epoch : 015, Training loss : 0.00182
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv8] pruned rate : 60%, #pruned channels : 307
																				 Top-1 accuracy : 91.11%, Top-5 accuracy : 99.29%

----- pruned rate : 70%, #pruned channels : 358 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 256, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154, 3, 3])
Epoch : 001, Training loss : 0.00453
Epoch : 002, Training loss : 0.00324
Epoch : 003, Training loss : 0.00239
Epoch : 004, Training loss : 0.00251
Epoch : 005, Training loss : 0.00207
Epoch : 006, Training loss : 0.00203
Epoch : 007, Training loss : 0.00199
Epoch : 008, Training loss : 0.00197
Epoch : 009, Training loss : 0.00198
Epoch : 010, Training loss : 0.00186
Epoch : 011, Training loss : 0.00188
Epoch : 012, Training loss : 0.00187
Epoch : 013, Training loss : 0.00182
Epoch : 014, Training loss : 0.00184
Epoch : 015, Training loss : 0.00184
Epoch : 016, Training loss : 0.00185
Epoch : 017, Training loss : 0.00182
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00186
																				 [conv8] pruned rate : 70%, #pruned channels : 358
																				 Top-1 accuracy : 91.07%, Top-5 accuracy : 99.08%

----- pruned rate : 80%, #pruned channels : 410 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56], device='cuda:0')
pruned_weight.shape : torch.Size([102, 256, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102, 3, 3])
Epoch : 001, Training loss : 0.01498
Epoch : 002, Training loss : 0.00695
Epoch : 003, Training loss : 0.00419
Epoch : 004, Training loss : 0.00334
Epoch : 005, Training loss : 0.00280
Epoch : 006, Training loss : 0.00272
Epoch : 007, Training loss : 0.00236
Epoch : 008, Training loss : 0.00212
Epoch : 009, Training loss : 0.00219
Epoch : 010, Training loss : 0.00212
Epoch : 011, Training loss : 0.00206
Epoch : 012, Training loss : 0.00197
Epoch : 013, Training loss : 0.00191
Epoch : 014, Training loss : 0.00186
Epoch : 015, Training loss : 0.00187
Epoch : 016, Training loss : 0.00187
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00185
Epoch : 019, Training loss : 0.00182
Epoch : 020, Training loss : 0.00181
																				 [conv8] pruned rate : 80%, #pruned channels : 410
																				 Top-1 accuracy : 91.16%, Top-5 accuracy : 99.25%

----- pruned rate : 90%, #pruned channels : 461 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353], device='cuda:0')
pruned_weight.shape : torch.Size([51, 256, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51, 3, 3])
Epoch : 001, Training loss : 0.04501
Epoch : 002, Training loss : 0.01299
Epoch : 003, Training loss : 0.00857
Epoch : 004, Training loss : 0.00524
Epoch : 005, Training loss : 0.00442
Epoch : 006, Training loss : 0.00476
Epoch : 007, Training loss : 0.00359
Epoch : 008, Training loss : 0.00272
Epoch : 009, Training loss : 0.00232
Epoch : 010, Training loss : 0.00239
Epoch : 011, Training loss : 0.00249
Epoch : 012, Training loss : 0.00229
Epoch : 013, Training loss : 0.00206
Epoch : 014, Training loss : 0.00201
Epoch : 015, Training loss : 0.00190
Epoch : 016, Training loss : 0.00201
Epoch : 017, Training loss : 0.00199
Epoch : 018, Training loss : 0.00203
Epoch : 019, Training loss : 0.00196
Epoch : 020, Training loss : 0.00204
																				 [conv8] pruned rate : 90%, #pruned channels : 461
																				 Top-1 accuracy : 91.30%, Top-5 accuracy : 99.14%

----- pruned rate : 95%, #pruned channels : 486 -----
weight.shape : torch.Size([512, 256, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246, 234, 322,
        371, 159, 278, 355, 189, 136, 239, 274, 161, 269, 124, 378,  70,  86,
        106,  76, 182,  74, 187,  22, 112, 207, 353, 441, 458,  59, 144, 430,
        175,  98, 482, 309, 470, 367, 321, 317, 242, 403, 284,  84, 169,  83,
        155, 473, 268, 215,  94, 387, 217, 363, 437, 150,  30, 248, 376,  90,
        465, 171,  23, 432, 313,  63, 461, 395,  66, 307, 419,  44,  34, 190,
        228, 392, 104,  56, 494, 204,  93,  57, 488,  81, 337, 393, 359, 251,
        197, 127,  40, 230, 213, 158, 448, 126, 261, 184, 270, 447, 111, 103,
         45, 373, 272, 481, 177,  10, 315, 134, 160, 218,  16, 350, 502,  55,
        424, 237, 366,  99, 173, 118, 348, 435,  41, 295, 291, 436, 224, 364,
        156,  29, 459, 389, 341, 256, 162, 356,  17, 142, 117, 475, 209, 497,
        275, 128, 361, 490, 280, 264, 452, 107, 186, 250,   5, 318,  20, 396,
        368, 231, 483, 152, 170, 428, 236,  28, 443, 110, 422,  60, 129, 415,
         69, 420, 297,  67, 388, 257, 384, 206, 140, 286,   9,  15, 444, 351,
        372, 450, 504, 164, 345, 401, 414, 467, 298, 108,  82,  53, 219, 386,
        174, 271, 247,  13, 180, 105, 402, 148, 354, 455, 357, 165, 472,  68,
        468, 499,  24, 332,  12,   7, 449,  25, 125, 399, 304, 500, 253, 214,
        259, 352, 330, 229, 168, 464,  42, 311, 288,  65, 349, 305, 146, 491,
        369, 109, 178, 191,  85, 339, 149, 233, 509, 469, 451, 130, 487, 485,
        262,  78, 323, 334, 429, 260, 381, 198, 123, 166, 181, 221, 446, 338,
         79, 263,  96, 276,  31, 119, 122,  54, 344,  92,  58, 417,  64, 258,
        235, 153,  50,  11, 139, 427, 249, 157, 154, 290, 501, 343, 329, 431,
        362, 225, 425, 506,  14, 408, 216,  80, 240,   1,   6,  73,  52, 336,
        314, 331, 143, 426, 434, 474,   0, 326, 303, 489,  19, 457,  72, 380,
        102, 114,   8, 374,  35, 279,  18, 101, 440, 453, 238, 328, 202, 312,
        199, 327, 281, 192, 413, 445, 138, 167, 277, 245,  27, 212, 296, 375,
        227,  32, 394,  51, 115, 163, 463,  43,  87, 306, 505, 241, 462, 416,
        131, 145,  38, 391, 404,  37, 418, 289, 442, 460, 232, 406, 407, 116,
        400, 358, 193, 196, 423, 342,  62, 267, 172,  49, 409, 510, 195, 480,
        299, 316, 308,  91, 205, 200, 438, 266,  88, 282, 293, 346, 383, 495,
        243, 287, 397, 379, 390,  33, 211, 141, 325,  89, 310, 222,   4, 220,
         77, 100,  61, 151, 294, 511, 188, 333, 254, 292,  75, 479, 113,  36,
         47, 498, 492, 484, 412, 320, 133, 252, 301, 411,  39, 300, 421, 302,
        185, 377, 194, 121, 454, 285, 433,  71, 382, 319, 496, 486, 273, 283,
        478, 203, 226, 507, 324,  48, 471, 466, 120, 365, 183,  95, 210,   2,
        410, 385, 223, 137, 508, 244, 179, 201], device='cuda:0')
saving_filter_idices : tensor([493, 503, 340, 370, 265, 147, 255, 439, 335,   3, 135,  26, 360, 347,
        405, 208, 456, 398, 176,  97, 132, 476,  21, 477,  46, 246],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 256, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26, 3, 3])
Epoch : 001, Training loss : 0.08554
Epoch : 002, Training loss : 0.02343
Epoch : 003, Training loss : 0.01299
Epoch : 004, Training loss : 0.01110
Epoch : 005, Training loss : 0.00712
Epoch : 006, Training loss : 0.00657
Epoch : 007, Training loss : 0.00596
Epoch : 008, Training loss : 0.00459
Epoch : 009, Training loss : 0.00425
Epoch : 010, Training loss : 0.00378
Epoch : 011, Training loss : 0.00393
Epoch : 012, Training loss : 0.00342
Epoch : 013, Training loss : 0.00289
Epoch : 014, Training loss : 0.00293
Epoch : 015, Training loss : 0.00242
Epoch : 016, Training loss : 0.00216
Epoch : 017, Training loss : 0.00208
Epoch : 018, Training loss : 0.00210
Epoch : 019, Training loss : 0.00194
Epoch : 020, Training loss : 0.00201
																				 [conv8] pruned rate : 95%, #pruned channels : 486
																				 Top-1 accuracy : 91.28%, Top-5 accuracy : 99.25%
========================================  conv9  ========================================

----- pruned rate : 10%, #pruned channels : 51 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492],
       device='cuda:0')
pruned_weight.shape : torch.Size([461, 512, 3, 3])
pruned_bias.shape : torch.Size([461])
pruned_bn_gamma.shape : torch.Size([461])
pruned_bn_beta.shape : torch.Size([461])
pruned_bn_running_mean.shape : torch.Size([461])
pruned_bn_running_var.shape : torch.Size([461])
pruned_next_weight.shape : torch.Size([512, 461, 3, 3])
Epoch : 001, Training loss : 0.00174
Epoch : 002, Training loss : 0.00175
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00175
Epoch : 010, Training loss : 0.00176
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00177
																				 [conv9] pruned rate : 10%, #pruned channels : 51
																				 Top-1 accuracy : 91.84%, Top-5 accuracy : 99.34%

----- pruned rate : 20%, #pruned channels : 102 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326], device='cuda:0')
pruned_weight.shape : torch.Size([410, 512, 3, 3])
pruned_bias.shape : torch.Size([410])
pruned_bn_gamma.shape : torch.Size([410])
pruned_bn_beta.shape : torch.Size([410])
pruned_bn_running_mean.shape : torch.Size([410])
pruned_bn_running_var.shape : torch.Size([410])
pruned_next_weight.shape : torch.Size([512, 410, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00175
Epoch : 004, Training loss : 0.00175
Epoch : 005, Training loss : 0.00176
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00175
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00175
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00177
																				 [conv9] pruned rate : 20%, #pruned channels : 102
																				 Top-1 accuracy : 91.65%, Top-5 accuracy : 99.33%

----- pruned rate : 30%, #pruned channels : 154 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474], device='cuda:0')
pruned_weight.shape : torch.Size([358, 512, 3, 3])
pruned_bias.shape : torch.Size([358])
pruned_bn_gamma.shape : torch.Size([358])
pruned_bn_beta.shape : torch.Size([358])
pruned_bn_running_mean.shape : torch.Size([358])
pruned_bn_running_var.shape : torch.Size([358])
pruned_next_weight.shape : torch.Size([512, 358, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00177
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00176
Epoch : 019, Training loss : 0.00175
Epoch : 020, Training loss : 0.00178
																				 [conv9] pruned rate : 30%, #pruned channels : 154
																				 Top-1 accuracy : 91.65%, Top-5 accuracy : 99.29%

----- pruned rate : 40%, #pruned channels : 205 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258],
       device='cuda:0')
pruned_weight.shape : torch.Size([307, 512, 3, 3])
pruned_bias.shape : torch.Size([307])
pruned_bn_gamma.shape : torch.Size([307])
pruned_bn_beta.shape : torch.Size([307])
pruned_bn_running_mean.shape : torch.Size([307])
pruned_bn_running_var.shape : torch.Size([307])
pruned_next_weight.shape : torch.Size([512, 307, 3, 3])
Epoch : 001, Training loss : 0.00180
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00181
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00176
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00178
																				 [conv9] pruned rate : 40%, #pruned channels : 205
																				 Top-1 accuracy : 91.73%, Top-5 accuracy : 99.36%

----- pruned rate : 50%, #pruned channels : 256 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27], device='cuda:0')
pruned_weight.shape : torch.Size([256, 512, 3, 3])
pruned_bias.shape : torch.Size([256])
pruned_bn_gamma.shape : torch.Size([256])
pruned_bn_beta.shape : torch.Size([256])
pruned_bn_running_mean.shape : torch.Size([256])
pruned_bn_running_var.shape : torch.Size([256])
pruned_next_weight.shape : torch.Size([512, 256, 3, 3])
Epoch : 001, Training loss : 0.00184
Epoch : 002, Training loss : 0.00181
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00175
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00176
																				 [conv9] pruned rate : 50%, #pruned channels : 256
																				 Top-1 accuracy : 91.67%, Top-5 accuracy : 99.31%

----- pruned rate : 60%, #pruned channels : 307 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192], device='cuda:0')
pruned_weight.shape : torch.Size([205, 512, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205, 3, 3])
Epoch : 001, Training loss : 0.00193
Epoch : 002, Training loss : 0.00182
Epoch : 003, Training loss : 0.00184
Epoch : 004, Training loss : 0.00181
Epoch : 005, Training loss : 0.00182
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00180
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00181
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00179
																				 [conv9] pruned rate : 60%, #pruned channels : 307
																				 Top-1 accuracy : 91.64%, Top-5 accuracy : 99.28%

----- pruned rate : 70%, #pruned channels : 358 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 512, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154, 3, 3])
Epoch : 001, Training loss : 0.00211
Epoch : 002, Training loss : 0.00188
Epoch : 003, Training loss : 0.00184
Epoch : 004, Training loss : 0.00186
Epoch : 005, Training loss : 0.00184
Epoch : 006, Training loss : 0.00181
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00181
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00180
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00178
																				 [conv9] pruned rate : 70%, #pruned channels : 358
																				 Top-1 accuracy : 91.45%, Top-5 accuracy : 99.30%

----- pruned rate : 80%, #pruned channels : 410 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178], device='cuda:0')
pruned_weight.shape : torch.Size([102, 512, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102, 3, 3])
Epoch : 001, Training loss : 0.00238
Epoch : 002, Training loss : 0.00202
Epoch : 003, Training loss : 0.00189
Epoch : 004, Training loss : 0.00189
Epoch : 005, Training loss : 0.00186
Epoch : 006, Training loss : 0.00182
Epoch : 007, Training loss : 0.00183
Epoch : 008, Training loss : 0.00184
Epoch : 009, Training loss : 0.00182
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00182
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00178
																				 [conv9] pruned rate : 80%, #pruned channels : 410
																				 Top-1 accuracy : 91.31%, Top-5 accuracy : 99.30%

----- pruned rate : 90%, #pruned channels : 461 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7], device='cuda:0')
pruned_weight.shape : torch.Size([51, 512, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51, 3, 3])
Epoch : 001, Training loss : 0.00387
Epoch : 002, Training loss : 0.00256
Epoch : 003, Training loss : 0.00224
Epoch : 004, Training loss : 0.00203
Epoch : 005, Training loss : 0.00197
Epoch : 006, Training loss : 0.00189
Epoch : 007, Training loss : 0.00189
Epoch : 008, Training loss : 0.00185
Epoch : 009, Training loss : 0.00186
Epoch : 010, Training loss : 0.00183
Epoch : 011, Training loss : 0.00183
Epoch : 012, Training loss : 0.00183
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00187
Epoch : 015, Training loss : 0.00183
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00181
Epoch : 020, Training loss : 0.00179
																				 [conv9] pruned rate : 90%, #pruned channels : 461
																				 Top-1 accuracy : 91.36%, Top-5 accuracy : 99.23%

----- pruned rate : 95%, #pruned channels : 486 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384, 456, 275,
        453, 488, 149, 143,  86, 202, 183,  96, 347,  46, 212, 194, 140,  15,
        272, 409, 181, 463, 276,  78, 482, 280,   7, 108, 314, 240, 214,  55,
        302,  98, 349, 300, 442, 301, 461,  85, 444, 416,  90,  81, 226,  77,
        231, 282, 217, 303, 216,  76, 155, 469, 481, 483, 433, 278, 230, 253,
        131, 173, 407, 152, 393, 311, 154, 487, 465, 400,   1, 222, 428,  50,
        394, 101, 340, 178, 228, 345, 281, 369,  74, 233, 509, 196, 136, 423,
        251, 334, 426,  56, 372, 352,   5,  37, 292,  71,   4, 495, 168, 498,
        328, 255, 227, 187, 171, 157, 163, 293,  99, 452,  80, 103, 305, 147,
        223, 502, 346,  17, 325,  36, 269, 503,  97,  73,  16, 412, 294,  18,
        247,   2, 447, 205, 165, 506, 113,  52, 368,  64, 246, 236, 166, 507,
        310,  35, 121, 118, 313, 414, 324, 410,  58, 378, 353, 169, 172, 430,
         21, 170,  94, 350, 307, 285, 484, 208, 159,  65,   3,  25,   9, 174,
         69, 478, 437,  38,  53, 504,  19, 215, 192, 485, 496, 385, 486, 388,
        351, 411, 459, 467, 125, 197, 235, 342, 266, 130, 123,  39, 448,  49,
          8, 164, 234, 145, 365, 322, 401,  13, 257,  54, 319, 359, 184, 455,
        344,  40,  72,  63,  31, 392, 335, 256, 105,  30, 464, 209, 298, 438,
        114,  12,  93,  27,  42, 274, 243, 466, 115, 146, 219, 327, 341, 458,
        225, 449, 406, 283, 491, 284, 439, 402, 308, 182, 265, 112, 139, 175,
        264, 156, 468, 417, 441, 471, 354, 198, 462, 440, 267, 138, 398,  47,
        102,  67, 366, 323, 232, 408, 151, 200, 315, 189, 475, 100, 258, 158,
        421, 299,  28, 206, 321,  79, 195, 371,  24, 239, 331, 390, 104, 367,
        435, 229, 477, 126, 415, 180, 129, 238,  89, 120, 450, 287, 317, 404,
        286,  45,  88, 291, 395, 457, 185, 510, 403,  75, 460, 220, 473, 290,
        318, 142, 110, 193, 218, 499, 199, 474, 508, 262,  84, 270,  61, 381,
        363, 186,  48,  92,  14, 337, 333, 479, 427, 355,  70, 137, 364, 124,
        436,  68, 391, 188, 141, 221, 289, 122, 144, 357,  29,  59, 339, 494,
        500, 295, 107, 389, 343, 259, 279, 329,  10, 383, 132, 116, 376, 470,
         41, 263, 380, 326, 250,  44, 489, 306,  57,   0, 127,  66, 418, 261,
        374, 472,  26, 167, 135, 288, 237, 387, 419, 405, 422, 360, 134,  43,
        399, 128, 425, 432, 497, 320, 429, 161, 273, 296, 248, 420, 277, 210,
        249, 511, 106,  82, 191,  34, 252,  91, 356, 454,  51, 505, 492, 431,
        379, 190, 213,  62, 338, 150, 207,  20, 476, 203, 443, 348, 242, 434,
        177, 260, 396, 133, 336, 397, 386, 361, 148,  22,  87, 304, 211, 358,
        382, 204, 501, 332, 373, 179, 480, 271, 377, 176, 446, 224,  83, 330,
        490,  32, 153, 111,  23,  11, 362, 493], device='cuda:0')
saving_filter_idices : tensor([370, 424, 245, 268, 312, 109, 316, 413, 297,  95, 117, 244, 241,   6,
        160,  60, 254, 119, 445, 201,  33, 375, 162, 309, 451, 384],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 512, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26, 3, 3])
Epoch : 001, Training loss : 0.00856
Epoch : 002, Training loss : 0.00324
Epoch : 003, Training loss : 0.00245
Epoch : 004, Training loss : 0.00252
Epoch : 005, Training loss : 0.00236
Epoch : 006, Training loss : 0.00207
Epoch : 007, Training loss : 0.00195
Epoch : 008, Training loss : 0.00192
Epoch : 009, Training loss : 0.00190
Epoch : 010, Training loss : 0.00191
Epoch : 011, Training loss : 0.00188
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00184
Epoch : 014, Training loss : 0.00186
Epoch : 015, Training loss : 0.00180
Epoch : 016, Training loss : 0.00187
Epoch : 017, Training loss : 0.00183
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv9] pruned rate : 95%, #pruned channels : 486
																				 Top-1 accuracy : 91.43%, Top-5 accuracy : 99.29%
========================================  conv10  ========================================

----- pruned rate : 10%, #pruned channels : 51 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200],
       device='cuda:0')
pruned_weight.shape : torch.Size([461, 512, 3, 3])
pruned_bias.shape : torch.Size([461])
pruned_bn_gamma.shape : torch.Size([461])
pruned_bn_beta.shape : torch.Size([461])
pruned_bn_running_mean.shape : torch.Size([461])
pruned_bn_running_var.shape : torch.Size([461])
pruned_next_weight.shape : torch.Size([512, 461, 3, 3])
Epoch : 001, Training loss : 0.00177
Epoch : 002, Training loss : 0.00177
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00175
Epoch : 006, Training loss : 0.00175
Epoch : 007, Training loss : 0.00175
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00176
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00174
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00175
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv10] pruned rate : 10%, #pruned channels : 51
																				 Top-1 accuracy : 91.80%, Top-5 accuracy : 99.42%

----- pruned rate : 20%, #pruned channels : 102 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112], device='cuda:0')
pruned_weight.shape : torch.Size([410, 512, 3, 3])
pruned_bias.shape : torch.Size([410])
pruned_bn_gamma.shape : torch.Size([410])
pruned_bn_beta.shape : torch.Size([410])
pruned_bn_running_mean.shape : torch.Size([410])
pruned_bn_running_var.shape : torch.Size([410])
pruned_next_weight.shape : torch.Size([512, 410, 3, 3])
Epoch : 001, Training loss : 0.00176
Epoch : 002, Training loss : 0.00175
Epoch : 003, Training loss : 0.00176
Epoch : 004, Training loss : 0.00175
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00175
Epoch : 014, Training loss : 0.00175
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00175
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00178
																				 [conv10] pruned rate : 20%, #pruned channels : 102
																				 Top-1 accuracy : 91.76%, Top-5 accuracy : 99.29%

----- pruned rate : 30%, #pruned channels : 154 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179], device='cuda:0')
pruned_weight.shape : torch.Size([358, 512, 3, 3])
pruned_bias.shape : torch.Size([358])
pruned_bn_gamma.shape : torch.Size([358])
pruned_bn_beta.shape : torch.Size([358])
pruned_bn_running_mean.shape : torch.Size([358])
pruned_bn_running_var.shape : torch.Size([358])
pruned_next_weight.shape : torch.Size([512, 358, 3, 3])
Epoch : 001, Training loss : 0.00181
Epoch : 002, Training loss : 0.00179
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00175
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00175
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00176
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00175
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00175
Epoch : 020, Training loss : 0.00177
																				 [conv10] pruned rate : 30%, #pruned channels : 154
																				 Top-1 accuracy : 91.76%, Top-5 accuracy : 99.37%

----- pruned rate : 40%, #pruned channels : 205 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344],
       device='cuda:0')
pruned_weight.shape : torch.Size([307, 512, 3, 3])
pruned_bias.shape : torch.Size([307])
pruned_bn_gamma.shape : torch.Size([307])
pruned_bn_beta.shape : torch.Size([307])
pruned_bn_running_mean.shape : torch.Size([307])
pruned_bn_running_var.shape : torch.Size([307])
pruned_next_weight.shape : torch.Size([512, 307, 3, 3])
Epoch : 001, Training loss : 0.00175
Epoch : 002, Training loss : 0.00175
Epoch : 003, Training loss : 0.00176
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00176
Epoch : 006, Training loss : 0.00174
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00175
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00179
																				 [conv10] pruned rate : 40%, #pruned channels : 205
																				 Top-1 accuracy : 91.75%, Top-5 accuracy : 99.33%

----- pruned rate : 50%, #pruned channels : 256 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510], device='cuda:0')
pruned_weight.shape : torch.Size([256, 512, 3, 3])
pruned_bias.shape : torch.Size([256])
pruned_bn_gamma.shape : torch.Size([256])
pruned_bn_beta.shape : torch.Size([256])
pruned_bn_running_mean.shape : torch.Size([256])
pruned_bn_running_var.shape : torch.Size([256])
pruned_next_weight.shape : torch.Size([512, 256, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00177
Epoch : 003, Training loss : 0.00176
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00179
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00176
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00176
																				 [conv10] pruned rate : 50%, #pruned channels : 256
																				 Top-1 accuracy : 91.77%, Top-5 accuracy : 99.34%

----- pruned rate : 60%, #pruned channels : 307 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318], device='cuda:0')
pruned_weight.shape : torch.Size([205, 512, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205, 3, 3])
Epoch : 001, Training loss : 0.00181
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00176
																				 [conv10] pruned rate : 60%, #pruned channels : 307
																				 Top-1 accuracy : 91.72%, Top-5 accuracy : 99.31%

----- pruned rate : 70%, #pruned channels : 358 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 512, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154, 3, 3])
Epoch : 001, Training loss : 0.00185
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00178
																				 [conv10] pruned rate : 70%, #pruned channels : 358
																				 Top-1 accuracy : 91.70%, Top-5 accuracy : 99.33%

----- pruned rate : 80%, #pruned channels : 410 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332], device='cuda:0')
pruned_weight.shape : torch.Size([102, 512, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102, 3, 3])
Epoch : 001, Training loss : 0.00187
Epoch : 002, Training loss : 0.00183
Epoch : 003, Training loss : 0.00183
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00179
Epoch : 006, Training loss : 0.00181
Epoch : 007, Training loss : 0.00181
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00182
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00177
																				 [conv10] pruned rate : 80%, #pruned channels : 410
																				 Top-1 accuracy : 91.51%, Top-5 accuracy : 99.34%

----- pruned rate : 90%, #pruned channels : 461 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376], device='cuda:0')
pruned_weight.shape : torch.Size([51, 512, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51, 3, 3])
Epoch : 001, Training loss : 0.00203
Epoch : 002, Training loss : 0.00187
Epoch : 003, Training loss : 0.00187
Epoch : 004, Training loss : 0.00182
Epoch : 005, Training loss : 0.00183
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00181
Epoch : 008, Training loss : 0.00182
Epoch : 009, Training loss : 0.00183
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00181
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00176
																				 [conv10] pruned rate : 90%, #pruned channels : 461
																				 Top-1 accuracy : 91.56%, Top-5 accuracy : 99.30%

----- pruned rate : 95%, #pruned channels : 486 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336, 265, 295,
        413, 457,  63, 118, 281,  35, 353,  33, 487, 126, 256, 205, 383,  53,
        273, 508,  50, 389, 153, 311, 210, 343, 376, 217, 294, 191, 248, 211,
        257, 379, 366, 247, 454, 489, 473, 374, 175, 469, 352, 347, 390, 177,
        420, 125, 423, 440, 464, 261, 138, 259, 219, 252,   4,   2, 456, 306,
        360, 459,  31, 303, 432,  79,  29, 224, 498, 218, 395, 122,  41, 226,
        236, 245, 168, 332, 148, 188, 264, 511, 410, 453, 495,  64, 397, 392,
        155, 169, 109, 393,  13, 277, 368,  17, 267, 466, 369,  49, 181, 452,
        111, 107, 475,  87, 288, 342, 193, 114, 134, 129, 490, 322, 478, 301,
        135, 208, 329, 380, 502, 144, 443, 465, 189, 123, 398, 439, 357, 242,
        182, 289, 240, 437, 326,  69,  54, 350, 331, 137, 400, 450, 371, 287,
        223, 174,  88,  14,  36, 195, 184, 408, 447, 106,  16, 482, 231, 234,
        330, 445, 412, 262, 216,  19,  42, 145,  67, 403, 147, 405,  22,   5,
         73, 100,  59, 463, 485, 237, 238,  81, 318, 192, 433,  82, 427, 363,
         58, 418, 161, 509, 196, 142, 436, 198, 349,  95, 377, 348, 425, 506,
        167, 131, 243,  90, 503, 365, 263,  23, 468, 146,  34, 101, 378, 356,
        337, 430, 492,  77, 251, 488,   3, 183, 504,  75, 414,  99, 312, 388,
        304, 340,   6, 510, 233,  15,  89, 108, 213, 212,  66,  84, 136,  52,
         44, 300, 199,  78,  26, 133, 448, 299, 458,  25, 149, 250,  72, 116,
        387, 185, 266, 159, 449, 404, 151,  61, 421, 166, 339,  37, 474,  85,
        507, 345,  21,  94, 402, 444, 128, 280, 290, 286, 254, 293, 344, 150,
        113, 406, 323,  46,  62, 298, 115, 375, 505, 141, 241, 297,  11,  40,
        462, 229,  38, 384, 486, 190, 484, 255, 328, 207,  76, 370,   8, 103,
        143, 416, 313,  93, 394, 171, 401, 451, 315, 496, 282,  98,  47, 110,
        152, 246, 399, 232, 186, 222, 346, 179, 477, 309, 481, 431, 163, 476,
        278, 235, 446, 104,  65, 127, 391,  55,  60,  27, 180, 162, 438, 355,
        480, 202, 471, 441, 173, 372, 362, 284, 291, 422, 271, 497, 305, 386,
        319, 172, 429, 310, 351,  10,  30, 121, 493, 194, 426, 308, 178, 327,
        472, 157, 296, 112, 274,  24, 275, 461,  91, 367, 176, 225, 483, 228,
        455, 164, 460,  45, 320, 239, 324,  96, 260,  86, 197, 407, 381, 117,
          0, 467, 230, 361, 415, 272, 491, 244, 227, 354, 358, 124, 411,  43,
        338, 428,  71,  20,  57, 139, 417,  68,  83, 341, 206, 499, 200,  51,
        119, 209,  28, 396, 501, 276, 321, 268, 154, 364,  39,   7, 302, 249,
         32, 158, 201,  48, 494, 165, 359, 409,   1, 214, 317, 314, 160,  70,
        102, 307, 424, 335,  92, 292, 270,  18, 132, 419, 283, 279, 253, 316,
        105, 435, 470, 204, 434, 373,  97, 215], device='cuda:0')
saving_filter_idices : tensor([333, 325, 221, 156,   9, 500, 442, 269, 334, 385, 479,  12,  80, 140,
        170,  74, 258, 187, 220, 130, 120, 203, 285, 382,  56, 336],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 512, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26, 3, 3])
Epoch : 001, Training loss : 0.00237
Epoch : 002, Training loss : 0.00200
Epoch : 003, Training loss : 0.00189
Epoch : 004, Training loss : 0.00191
Epoch : 005, Training loss : 0.00185
Epoch : 006, Training loss : 0.00189
Epoch : 007, Training loss : 0.00185
Epoch : 008, Training loss : 0.00187
Epoch : 009, Training loss : 0.00181
Epoch : 010, Training loss : 0.00183
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00181
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00183
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00177
																				 [conv10] pruned rate : 95%, #pruned channels : 486
																				 Top-1 accuracy : 91.36%, Top-5 accuracy : 99.30%
========================================  conv11  ========================================

----- pruned rate : 10%, #pruned channels : 51 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362],
       device='cuda:0')
pruned_weight.shape : torch.Size([461, 512, 3, 3])
pruned_bias.shape : torch.Size([461])
pruned_bn_gamma.shape : torch.Size([461])
pruned_bn_beta.shape : torch.Size([461])
pruned_bn_running_mean.shape : torch.Size([461])
pruned_bn_running_var.shape : torch.Size([461])
pruned_next_weight.shape : torch.Size([512, 461, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00175
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00176
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00174
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00175
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00177
																				 [conv11] pruned rate : 10%, #pruned channels : 51
																				 Top-1 accuracy : 91.66%, Top-5 accuracy : 99.37%

----- pruned rate : 20%, #pruned channels : 102 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36], device='cuda:0')
pruned_weight.shape : torch.Size([410, 512, 3, 3])
pruned_bias.shape : torch.Size([410])
pruned_bn_gamma.shape : torch.Size([410])
pruned_bn_beta.shape : torch.Size([410])
pruned_bn_running_mean.shape : torch.Size([410])
pruned_bn_running_var.shape : torch.Size([410])
pruned_next_weight.shape : torch.Size([512, 410, 3, 3])
Epoch : 001, Training loss : 0.00177
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00174
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00175
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00175
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00176
Epoch : 011, Training loss : 0.00176
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00175
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00176
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00176
																				 [conv11] pruned rate : 20%, #pruned channels : 102
																				 Top-1 accuracy : 91.80%, Top-5 accuracy : 99.38%

----- pruned rate : 30%, #pruned channels : 154 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238], device='cuda:0')
pruned_weight.shape : torch.Size([358, 512, 3, 3])
pruned_bias.shape : torch.Size([358])
pruned_bn_gamma.shape : torch.Size([358])
pruned_bn_beta.shape : torch.Size([358])
pruned_bn_running_mean.shape : torch.Size([358])
pruned_bn_running_var.shape : torch.Size([358])
pruned_next_weight.shape : torch.Size([512, 358, 3, 3])
Epoch : 001, Training loss : 0.00177
Epoch : 002, Training loss : 0.00179
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00176
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00175
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00174
Epoch : 018, Training loss : 0.00174
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00176
																				 [conv11] pruned rate : 30%, #pruned channels : 154
																				 Top-1 accuracy : 91.81%, Top-5 accuracy : 99.41%

----- pruned rate : 40%, #pruned channels : 205 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68],
       device='cuda:0')
pruned_weight.shape : torch.Size([307, 512, 3, 3])
pruned_bias.shape : torch.Size([307])
pruned_bn_gamma.shape : torch.Size([307])
pruned_bn_beta.shape : torch.Size([307])
pruned_bn_running_mean.shape : torch.Size([307])
pruned_bn_running_var.shape : torch.Size([307])
pruned_next_weight.shape : torch.Size([512, 307, 3, 3])
Epoch : 001, Training loss : 0.00179
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00176
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00174
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00175
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00175
Epoch : 020, Training loss : 0.00177
																				 [conv11] pruned rate : 40%, #pruned channels : 205
																				 Top-1 accuracy : 91.73%, Top-5 accuracy : 99.35%

----- pruned rate : 50%, #pruned channels : 256 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4], device='cuda:0')
pruned_weight.shape : torch.Size([256, 512, 3, 3])
pruned_bias.shape : torch.Size([256])
pruned_bn_gamma.shape : torch.Size([256])
pruned_bn_beta.shape : torch.Size([256])
pruned_bn_running_mean.shape : torch.Size([256])
pruned_bn_running_var.shape : torch.Size([256])
pruned_next_weight.shape : torch.Size([512, 256, 3, 3])
Epoch : 001, Training loss : 0.00180
Epoch : 002, Training loss : 0.00179
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00180
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00179
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00176
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv11] pruned rate : 50%, #pruned channels : 256
																				 Top-1 accuracy : 91.76%, Top-5 accuracy : 99.36%

----- pruned rate : 60%, #pruned channels : 307 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78], device='cuda:0')
pruned_weight.shape : torch.Size([205, 512, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205, 3, 3])
Epoch : 001, Training loss : 0.00182
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00177
																				 [conv11] pruned rate : 60%, #pruned channels : 307
																				 Top-1 accuracy : 91.73%, Top-5 accuracy : 99.39%

----- pruned rate : 70%, #pruned channels : 358 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 512, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154, 3, 3])
Epoch : 001, Training loss : 0.00184
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00181
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00180
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00176
																				 [conv11] pruned rate : 70%, #pruned channels : 358
																				 Top-1 accuracy : 91.75%, Top-5 accuracy : 99.45%

----- pruned rate : 80%, #pruned channels : 410 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252], device='cuda:0')
pruned_weight.shape : torch.Size([102, 512, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102, 3, 3])
Epoch : 001, Training loss : 0.00195
Epoch : 002, Training loss : 0.00183
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00180
Epoch : 005, Training loss : 0.00181
Epoch : 006, Training loss : 0.00181
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00178
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00176
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00178
																				 [conv11] pruned rate : 80%, #pruned channels : 410
																				 Top-1 accuracy : 91.79%, Top-5 accuracy : 99.36%

----- pruned rate : 90%, #pruned channels : 461 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94], device='cuda:0')
pruned_weight.shape : torch.Size([51, 512, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51, 3, 3])
Epoch : 001, Training loss : 0.00217
Epoch : 002, Training loss : 0.00189
Epoch : 003, Training loss : 0.00188
Epoch : 004, Training loss : 0.00184
Epoch : 005, Training loss : 0.00182
Epoch : 006, Training loss : 0.00184
Epoch : 007, Training loss : 0.00182
Epoch : 008, Training loss : 0.00183
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00182
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00181
Epoch : 017, Training loss : 0.00179
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00177
																				 [conv11] pruned rate : 90%, #pruned channels : 461
																				 Top-1 accuracy : 91.79%, Top-5 accuracy : 99.33%

----- pruned rate : 95%, #pruned channels : 486 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393, 356, 388,
        315,  35, 346,  62,  58, 230, 255,  89, 110, 340, 338, 371, 144, 259,
        211, 102, 445, 111, 491,  65,  67, 173,  94, 108, 473, 216, 193, 309,
        155, 467, 114,  45, 450, 409, 510, 332, 505, 454, 337, 479, 462, 321,
        447,  12, 166, 119, 401, 325, 392, 184,  79,  72, 250, 433, 292, 152,
        227, 402, 376,  13, 223, 291, 201, 444,  32, 233,  18,  33,  61, 169,
        448, 244, 501, 252, 334,  57,  86, 133,  42, 411, 139, 449, 300, 353,
        498, 422, 100,  75, 280, 164,  92,  26, 295,  69, 484, 205, 270, 182,
        288, 145,  21, 363, 400, 241,  52, 317, 104,   3, 499, 283, 458, 176,
        378, 303,  28, 239, 103, 368,   2,  34, 129, 418,  70, 195, 446,  80,
          5,  15,  63, 354, 330, 472, 263,  30, 358, 157,   1, 260, 272, 137,
        151, 386,  19, 500, 360, 459,  41, 150, 394, 347, 269, 477, 170, 194,
        417, 361, 511, 282, 236, 461, 397, 414, 496,  59, 271,  76, 437, 156,
        377,  90, 440, 159,  71, 326, 168, 482,  78, 208, 415, 187, 480,   8,
        294, 154, 140, 493, 302, 395, 165, 234, 203, 342, 486,  17, 218, 217,
         87, 183, 174, 426, 105, 245, 443, 257,   0, 307, 365, 162,  40,  16,
        372, 478, 320, 147, 225, 262, 384, 314, 177,  22, 483, 460, 423, 328,
        316, 507, 106,   4, 258, 237, 408, 318,  66, 246, 475, 235,  48, 153,
        428, 127, 226, 120,  83, 442, 430, 275,  54, 312, 431, 293, 146, 214,
        382,  99, 364, 107,  85, 141, 112,  97, 253, 167, 416,   9, 160, 385,
         44, 306, 186, 381, 336, 502, 199,  49, 464,  84, 506, 279,  68,  14,
        284, 124, 375, 434, 215, 436, 481,  29,  60, 305, 276, 161, 380, 424,
        366,  53,  38, 374,   6, 251, 468, 313,  47, 278, 264, 357, 322, 495,
        240,  73, 412, 220, 331, 131, 403,  51, 242,  50, 117, 196, 116, 221,
        206, 327, 379, 311,   7, 452, 348, 238, 249,  10,  81, 370, 297, 212,
        355, 298, 265, 274,  20, 113,  82, 441,  96, 130, 497, 345, 136, 405,
        425,  27, 391, 267, 453, 289, 476, 149, 190, 470, 135, 142, 247, 204,
         64,  77, 143, 213, 344, 398, 158,  25, 429, 399, 308, 231, 339, 435,
        224, 324, 185,  36, 456, 163, 323, 121, 396, 404, 172, 243, 508,  43,
        202, 373, 128, 229, 192,  95, 503, 509, 268, 350, 256, 383, 413, 471,
        335, 138, 351, 148, 427, 489, 465, 248, 126,  24, 188, 261, 207, 329,
        296,  46, 175,  74,  88, 432, 134, 179, 122, 439, 343, 254, 362, 132,
        286, 451, 171, 319, 494, 232, 387, 109, 101, 123, 369, 367, 389, 266,
        200, 301, 438,  23,  56, 290, 469, 455, 197, 118, 492, 474, 285, 277,
        299,  39, 198,  55, 420, 287, 421,  11, 209, 359, 189, 410, 466,  37,
        390,  93, 419, 178, 228, 191, 406,  98], device='cuda:0')
saving_filter_idices : tensor([ 31, 487, 463, 352, 341, 349, 219, 222, 457, 281,  91, 333, 485, 488,
        180, 210, 504, 304, 490, 407, 273, 181, 115, 125, 310, 393],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 512, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26, 3, 3])
Epoch : 001, Training loss : 0.00255
Epoch : 002, Training loss : 0.00203
Epoch : 003, Training loss : 0.00194
Epoch : 004, Training loss : 0.00189
Epoch : 005, Training loss : 0.00187
Epoch : 006, Training loss : 0.00187
Epoch : 007, Training loss : 0.00184
Epoch : 008, Training loss : 0.00185
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00181
Epoch : 011, Training loss : 0.00182
Epoch : 012, Training loss : 0.00181
Epoch : 013, Training loss : 0.00181
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv11] pruned rate : 95%, #pruned channels : 486
																				 Top-1 accuracy : 91.70%, Top-5 accuracy : 99.40%
========================================  conv12  ========================================

----- pruned rate : 10%, #pruned channels : 51 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282],
       device='cuda:0')
pruned_weight.shape : torch.Size([461, 512, 3, 3])
pruned_bias.shape : torch.Size([461])
pruned_bn_gamma.shape : torch.Size([461])
pruned_bn_beta.shape : torch.Size([461])
pruned_bn_running_mean.shape : torch.Size([461])
pruned_bn_running_var.shape : torch.Size([461])
pruned_next_weight.shape : torch.Size([512, 461, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00177
Epoch : 003, Training loss : 0.00178
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00176
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00175
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00176
Epoch : 011, Training loss : 0.00175
Epoch : 012, Training loss : 0.00177
Epoch : 013, Training loss : 0.00175
Epoch : 014, Training loss : 0.00175
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00176
																				 [conv12] pruned rate : 10%, #pruned channels : 51
																				 Top-1 accuracy : 91.74%, Top-5 accuracy : 99.38%

----- pruned rate : 20%, #pruned channels : 102 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480], device='cuda:0')
pruned_weight.shape : torch.Size([410, 512, 3, 3])
pruned_bias.shape : torch.Size([410])
pruned_bn_gamma.shape : torch.Size([410])
pruned_bn_beta.shape : torch.Size([410])
pruned_bn_running_mean.shape : torch.Size([410])
pruned_bn_running_var.shape : torch.Size([410])
pruned_next_weight.shape : torch.Size([512, 410, 3, 3])
Epoch : 001, Training loss : 0.00176
Epoch : 002, Training loss : 0.00176
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00175
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00175
Epoch : 011, Training loss : 0.00175
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00178
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv12] pruned rate : 20%, #pruned channels : 102
																				 Top-1 accuracy : 91.84%, Top-5 accuracy : 99.35%

----- pruned rate : 30%, #pruned channels : 154 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374], device='cuda:0')
pruned_weight.shape : torch.Size([358, 512, 3, 3])
pruned_bias.shape : torch.Size([358])
pruned_bn_gamma.shape : torch.Size([358])
pruned_bn_beta.shape : torch.Size([358])
pruned_bn_running_mean.shape : torch.Size([358])
pruned_bn_running_var.shape : torch.Size([358])
pruned_next_weight.shape : torch.Size([512, 358, 3, 3])
Epoch : 001, Training loss : 0.00178
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00177
Epoch : 004, Training loss : 0.00174
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00176
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00175
Epoch : 017, Training loss : 0.00175
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00175
Epoch : 020, Training loss : 0.00177
																				 [conv12] pruned rate : 30%, #pruned channels : 154
																				 Top-1 accuracy : 91.79%, Top-5 accuracy : 99.40%

----- pruned rate : 40%, #pruned channels : 205 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285],
       device='cuda:0')
pruned_weight.shape : torch.Size([307, 512, 3, 3])
pruned_bias.shape : torch.Size([307])
pruned_bn_gamma.shape : torch.Size([307])
pruned_bn_beta.shape : torch.Size([307])
pruned_bn_running_mean.shape : torch.Size([307])
pruned_bn_running_var.shape : torch.Size([307])
pruned_next_weight.shape : torch.Size([512, 307, 3, 3])
Epoch : 001, Training loss : 0.00177
Epoch : 002, Training loss : 0.00178
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00177
Epoch : 006, Training loss : 0.00179
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00177
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00174
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00179
																				 [conv12] pruned rate : 40%, #pruned channels : 205
																				 Top-1 accuracy : 91.75%, Top-5 accuracy : 99.34%

----- pruned rate : 50%, #pruned channels : 256 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245], device='cuda:0')
pruned_weight.shape : torch.Size([256, 512, 3, 3])
pruned_bias.shape : torch.Size([256])
pruned_bn_gamma.shape : torch.Size([256])
pruned_bn_beta.shape : torch.Size([256])
pruned_bn_running_mean.shape : torch.Size([256])
pruned_bn_running_var.shape : torch.Size([256])
pruned_next_weight.shape : torch.Size([512, 256, 3, 3])
Epoch : 001, Training loss : 0.00181
Epoch : 002, Training loss : 0.00179
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00179
Epoch : 005, Training loss : 0.00178
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00178
Epoch : 008, Training loss : 0.00174
Epoch : 009, Training loss : 0.00184
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00176
																				 [conv12] pruned rate : 50%, #pruned channels : 256
																				 Top-1 accuracy : 91.75%, Top-5 accuracy : 99.39%

----- pruned rate : 60%, #pruned channels : 307 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434], device='cuda:0')
pruned_weight.shape : torch.Size([205, 512, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205, 3, 3])
Epoch : 001, Training loss : 0.00188
Epoch : 002, Training loss : 0.00182
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00183
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00180
Epoch : 008, Training loss : 0.00179
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00179
Epoch : 011, Training loss : 0.00180
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv12] pruned rate : 60%, #pruned channels : 307
																				 Top-1 accuracy : 91.84%, Top-5 accuracy : 99.41%

----- pruned rate : 70%, #pruned channels : 358 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 512, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154, 3, 3])
Epoch : 001, Training loss : 0.00199
Epoch : 002, Training loss : 0.00185
Epoch : 003, Training loss : 0.00185
Epoch : 004, Training loss : 0.00181
Epoch : 005, Training loss : 0.00184
Epoch : 006, Training loss : 0.00182
Epoch : 007, Training loss : 0.00182
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00179
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00180
Epoch : 013, Training loss : 0.00180
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00179
																				 [conv12] pruned rate : 70%, #pruned channels : 358
																				 Top-1 accuracy : 91.76%, Top-5 accuracy : 99.37%

----- pruned rate : 80%, #pruned channels : 410 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482], device='cuda:0')
pruned_weight.shape : torch.Size([102, 512, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102, 3, 3])
Epoch : 001, Training loss : 0.00215
Epoch : 002, Training loss : 0.00194
Epoch : 003, Training loss : 0.00191
Epoch : 004, Training loss : 0.00187
Epoch : 005, Training loss : 0.00186
Epoch : 006, Training loss : 0.00187
Epoch : 007, Training loss : 0.00186
Epoch : 008, Training loss : 0.00184
Epoch : 009, Training loss : 0.00183
Epoch : 010, Training loss : 0.00182
Epoch : 011, Training loss : 0.00181
Epoch : 012, Training loss : 0.00183
Epoch : 013, Training loss : 0.00181
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00178
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00177
																				 [conv12] pruned rate : 80%, #pruned channels : 410
																				 Top-1 accuracy : 91.82%, Top-5 accuracy : 99.41%

----- pruned rate : 90%, #pruned channels : 461 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166], device='cuda:0')
pruned_weight.shape : torch.Size([51, 512, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51, 3, 3])
Epoch : 001, Training loss : 0.00260
Epoch : 002, Training loss : 0.00210
Epoch : 003, Training loss : 0.00201
Epoch : 004, Training loss : 0.00197
Epoch : 005, Training loss : 0.00194
Epoch : 006, Training loss : 0.00191
Epoch : 007, Training loss : 0.00189
Epoch : 008, Training loss : 0.00187
Epoch : 009, Training loss : 0.00186
Epoch : 010, Training loss : 0.00186
Epoch : 011, Training loss : 0.00183
Epoch : 012, Training loss : 0.00184
Epoch : 013, Training loss : 0.00183
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00180
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv12] pruned rate : 90%, #pruned channels : 461
																				 Top-1 accuracy : 91.78%, Top-5 accuracy : 99.39%

----- pruned rate : 95%, #pruned channels : 486 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257, 236,  41,
        451, 226, 178,  73, 392, 390,  99, 262, 120, 493, 461,   1, 462, 361,
        143, 489,  33, 162, 375, 310, 313, 189, 166, 360, 378, 110, 457,  39,
        149, 250,  32, 495,  86, 347, 466, 150, 243, 290, 485,  71, 292, 188,
        442, 320, 148, 405, 295, 279, 187, 274, 341,  12, 259, 441,  97, 414,
         88, 491, 427, 272, 287, 437, 233, 240, 235, 471, 368, 460, 356, 228,
        397, 404,  57, 482,  23, 454, 475,  91, 465, 129, 334, 455, 431,  64,
        502, 339,  16, 229, 201,   7, 470, 179, 118, 367, 432, 401, 217, 142,
        199, 115,  50, 231,  25, 492,  45, 255, 197,  13, 453, 123, 284,  60,
        300, 254, 137, 315, 138,  77, 109, 407, 205, 445,  65, 185, 141, 171,
        111, 102, 155, 456, 280,   3, 319, 154, 363, 219, 506,  67, 246,  31,
        338, 387, 443, 478, 220,   9, 403,  68, 261,  62, 265, 181, 429, 364,
         66,  90,  89, 497, 308, 207, 373,  10, 385, 439, 241, 101, 293, 323,
        406, 291, 372, 294, 484,  59,  84,  58, 434, 419, 366, 132,  75,  46,
        324, 359, 330, 440, 198, 413, 299, 114, 161, 336, 157, 224, 416,  37,
        222, 418, 159, 473, 175, 230, 176, 322, 349, 164,  47, 238, 389, 139,
        158, 340, 283,  44, 380, 104, 400, 275, 435,   8, 136, 153, 452, 208,
        249,  93,  61, 245, 438, 383, 499, 370, 184, 357, 247, 386, 355, 160,
        266, 411, 344, 507, 119, 307,  69,  98, 227, 221,  95, 182, 206, 444,
        169, 225, 511, 244,  83, 191, 270, 125, 297, 472, 173, 252,   6,  26,
        211,  42,  17, 234,  22, 106, 145, 303, 487, 494, 381, 256, 285,  76,
        193, 483, 277,  81, 146, 100,  72, 223, 331,  43, 112, 377,  78, 163,
          5, 488, 458, 152, 333, 467, 242, 384, 218, 410, 180, 412, 202, 258,
         15, 260, 209, 463,   4, 128, 353, 328,  96, 421, 388, 167, 122, 190,
         36, 468, 126,  19, 490, 479, 423, 374,  55, 312, 424, 117,  38, 459,
         24, 183, 302, 203,  49, 269, 288,  82, 504, 505, 251, 436, 309, 144,
        379, 113,  53, 200, 177, 409, 448,  14, 469,  35, 170,  40,  54,  48,
        196, 369,  70, 289, 447, 253, 498, 248, 351,  74,  51, 321, 264, 335,
        116, 428,  94, 480, 450, 343,  29, 232, 396, 477, 391, 213, 306, 318,
        474, 476, 425, 133, 348, 134, 108, 371, 135, 105, 130, 210, 263,  27,
        394,  92, 276,  63, 286, 408, 342,  28, 345, 352, 267, 501,  20, 508,
         79, 395, 147, 194, 325, 350, 481, 107, 420, 165, 305, 237, 282, 172,
        156, 398, 316, 121, 317, 314,  87, 103,   0, 382,  56,   2, 365, 271,
        346, 168, 354, 433,  80, 174, 362, 376, 503, 358, 509, 332, 510, 239,
        273, 195, 402, 192, 496, 449, 393, 131, 327, 326,  52, 464, 446, 399,
        296, 268, 214, 304, 500, 426,  30, 298], device='cuda:0')
saving_filter_idices : tensor([186, 212, 127, 415, 216, 337,  34, 124, 329, 417, 204,  18,  85, 486,
        301, 140,  21, 278, 430, 311,  11, 151, 215, 281, 422, 257],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 512, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26, 3, 3])
Epoch : 001, Training loss : 0.00312
Epoch : 002, Training loss : 0.00227
Epoch : 003, Training loss : 0.00214
Epoch : 004, Training loss : 0.00204
Epoch : 005, Training loss : 0.00199
Epoch : 006, Training loss : 0.00196
Epoch : 007, Training loss : 0.00192
Epoch : 008, Training loss : 0.00190
Epoch : 009, Training loss : 0.00189
Epoch : 010, Training loss : 0.00186
Epoch : 011, Training loss : 0.00186
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00182
Epoch : 014, Training loss : 0.00181
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00180
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00177
																				 [conv12] pruned rate : 95%, #pruned channels : 486
																				 Top-1 accuracy : 91.75%, Top-5 accuracy : 99.37%
========================================  conv13  ========================================

----- pruned rate : 10%, #pruned channels : 51 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72],
       device='cuda:0')
pruned_weight.shape : torch.Size([461, 512, 3, 3])
pruned_bias.shape : torch.Size([461])
pruned_bn_gamma.shape : torch.Size([461])
pruned_bn_beta.shape : torch.Size([461])
pruned_bn_running_mean.shape : torch.Size([461])
pruned_bn_running_var.shape : torch.Size([461])
pruned_next_weight.shape : torch.Size([512, 461])
Epoch : 001, Training loss : 0.00176
Epoch : 002, Training loss : 0.00175
Epoch : 003, Training loss : 0.00176
Epoch : 004, Training loss : 0.00178
Epoch : 005, Training loss : 0.00174
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00176
Epoch : 009, Training loss : 0.00175
Epoch : 010, Training loss : 0.00175
Epoch : 011, Training loss : 0.00177
Epoch : 012, Training loss : 0.00175
Epoch : 013, Training loss : 0.00177
Epoch : 014, Training loss : 0.00177
Epoch : 015, Training loss : 0.00176
Epoch : 016, Training loss : 0.00176
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00176
Epoch : 020, Training loss : 0.00178
																				 [conv13] pruned rate : 10%, #pruned channels : 51
																				 Top-1 accuracy : 91.94%, Top-5 accuracy : 99.35%

----- pruned rate : 20%, #pruned channels : 102 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74], device='cuda:0')
pruned_weight.shape : torch.Size([410, 512, 3, 3])
pruned_bias.shape : torch.Size([410])
pruned_bn_gamma.shape : torch.Size([410])
pruned_bn_beta.shape : torch.Size([410])
pruned_bn_running_mean.shape : torch.Size([410])
pruned_bn_running_var.shape : torch.Size([410])
pruned_next_weight.shape : torch.Size([512, 410])
Epoch : 001, Training loss : 0.00179
Epoch : 002, Training loss : 0.00180
Epoch : 003, Training loss : 0.00179
Epoch : 004, Training loss : 0.00176
Epoch : 005, Training loss : 0.00179
Epoch : 006, Training loss : 0.00177
Epoch : 007, Training loss : 0.00176
Epoch : 008, Training loss : 0.00177
Epoch : 009, Training loss : 0.00178
Epoch : 010, Training loss : 0.00177
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00178
Epoch : 013, Training loss : 0.00175
Epoch : 014, Training loss : 0.00178
Epoch : 015, Training loss : 0.00177
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00176
Epoch : 018, Training loss : 0.00177
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00179
																				 [conv13] pruned rate : 20%, #pruned channels : 102
																				 Top-1 accuracy : 91.72%, Top-5 accuracy : 99.30%

----- pruned rate : 30%, #pruned channels : 154 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291], device='cuda:0')
pruned_weight.shape : torch.Size([358, 512, 3, 3])
pruned_bias.shape : torch.Size([358])
pruned_bn_gamma.shape : torch.Size([358])
pruned_bn_beta.shape : torch.Size([358])
pruned_bn_running_mean.shape : torch.Size([358])
pruned_bn_running_var.shape : torch.Size([358])
pruned_next_weight.shape : torch.Size([512, 358])
Epoch : 001, Training loss : 0.00183
Epoch : 002, Training loss : 0.00182
Epoch : 003, Training loss : 0.00180
Epoch : 004, Training loss : 0.00177
Epoch : 005, Training loss : 0.00179
Epoch : 006, Training loss : 0.00178
Epoch : 007, Training loss : 0.00177
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00178
Epoch : 011, Training loss : 0.00178
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00179
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00177
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00178
Epoch : 020, Training loss : 0.00177
																				 [conv13] pruned rate : 30%, #pruned channels : 154
																				 Top-1 accuracy : 91.71%, Top-5 accuracy : 99.34%

----- pruned rate : 40%, #pruned channels : 205 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286],
       device='cuda:0')
pruned_weight.shape : torch.Size([307, 512, 3, 3])
pruned_bias.shape : torch.Size([307])
pruned_bn_gamma.shape : torch.Size([307])
pruned_bn_beta.shape : torch.Size([307])
pruned_bn_running_mean.shape : torch.Size([307])
pruned_bn_running_var.shape : torch.Size([307])
pruned_next_weight.shape : torch.Size([512, 307])
Epoch : 001, Training loss : 0.00191
Epoch : 002, Training loss : 0.00185
Epoch : 003, Training loss : 0.00183
Epoch : 004, Training loss : 0.00182
Epoch : 005, Training loss : 0.00180
Epoch : 006, Training loss : 0.00180
Epoch : 007, Training loss : 0.00179
Epoch : 008, Training loss : 0.00180
Epoch : 009, Training loss : 0.00181
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00179
Epoch : 013, Training loss : 0.00178
Epoch : 014, Training loss : 0.00176
Epoch : 015, Training loss : 0.00178
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00177
Epoch : 018, Training loss : 0.00178
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00177
																				 [conv13] pruned rate : 40%, #pruned channels : 205
																				 Top-1 accuracy : 91.73%, Top-5 accuracy : 99.40%

----- pruned rate : 50%, #pruned channels : 256 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455], device='cuda:0')
pruned_weight.shape : torch.Size([256, 512, 3, 3])
pruned_bias.shape : torch.Size([256])
pruned_bn_gamma.shape : torch.Size([256])
pruned_bn_beta.shape : torch.Size([256])
pruned_bn_running_mean.shape : torch.Size([256])
pruned_bn_running_var.shape : torch.Size([256])
pruned_next_weight.shape : torch.Size([512, 256])
Epoch : 001, Training loss : 0.00207
Epoch : 002, Training loss : 0.00194
Epoch : 003, Training loss : 0.00188
Epoch : 004, Training loss : 0.00185
Epoch : 005, Training loss : 0.00184
Epoch : 006, Training loss : 0.00183
Epoch : 007, Training loss : 0.00181
Epoch : 008, Training loss : 0.00181
Epoch : 009, Training loss : 0.00180
Epoch : 010, Training loss : 0.00180
Epoch : 011, Training loss : 0.00179
Epoch : 012, Training loss : 0.00181
Epoch : 013, Training loss : 0.00179
Epoch : 014, Training loss : 0.00182
Epoch : 015, Training loss : 0.00179
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00177
Epoch : 020, Training loss : 0.00181
																				 [conv13] pruned rate : 50%, #pruned channels : 256
																				 Top-1 accuracy : 91.74%, Top-5 accuracy : 99.35%

----- pruned rate : 60%, #pruned channels : 307 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348], device='cuda:0')
pruned_weight.shape : torch.Size([205, 512, 3, 3])
pruned_bias.shape : torch.Size([205])
pruned_bn_gamma.shape : torch.Size([205])
pruned_bn_beta.shape : torch.Size([205])
pruned_bn_running_mean.shape : torch.Size([205])
pruned_bn_running_var.shape : torch.Size([205])
pruned_next_weight.shape : torch.Size([512, 205])
Epoch : 001, Training loss : 0.00235
Epoch : 002, Training loss : 0.00206
Epoch : 003, Training loss : 0.00192
Epoch : 004, Training loss : 0.00190
Epoch : 005, Training loss : 0.00187
Epoch : 006, Training loss : 0.00184
Epoch : 007, Training loss : 0.00186
Epoch : 008, Training loss : 0.00184
Epoch : 009, Training loss : 0.00183
Epoch : 010, Training loss : 0.00181
Epoch : 011, Training loss : 0.00183
Epoch : 012, Training loss : 0.00182
Epoch : 013, Training loss : 0.00182
Epoch : 014, Training loss : 0.00182
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00179
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00179
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00179
																				 [conv13] pruned rate : 60%, #pruned channels : 307
																				 Top-1 accuracy : 91.85%, Top-5 accuracy : 99.39%

----- pruned rate : 70%, #pruned channels : 358 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449],
       device='cuda:0')
pruned_weight.shape : torch.Size([154, 512, 3, 3])
pruned_bias.shape : torch.Size([154])
pruned_bn_gamma.shape : torch.Size([154])
pruned_bn_beta.shape : torch.Size([154])
pruned_bn_running_mean.shape : torch.Size([154])
pruned_bn_running_var.shape : torch.Size([154])
pruned_next_weight.shape : torch.Size([512, 154])
Epoch : 001, Training loss : 0.00278
Epoch : 002, Training loss : 0.00220
Epoch : 003, Training loss : 0.00203
Epoch : 004, Training loss : 0.00196
Epoch : 005, Training loss : 0.00194
Epoch : 006, Training loss : 0.00187
Epoch : 007, Training loss : 0.00189
Epoch : 008, Training loss : 0.00190
Epoch : 009, Training loss : 0.00186
Epoch : 010, Training loss : 0.00185
Epoch : 011, Training loss : 0.00184
Epoch : 012, Training loss : 0.00184
Epoch : 013, Training loss : 0.00185
Epoch : 014, Training loss : 0.00180
Epoch : 015, Training loss : 0.00181
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00184
Epoch : 018, Training loss : 0.00180
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00180
																				 [conv13] pruned rate : 70%, #pruned channels : 358
																				 Top-1 accuracy : 91.76%, Top-5 accuracy : 99.35%

----- pruned rate : 80%, #pruned channels : 410 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169], device='cuda:0')
pruned_weight.shape : torch.Size([102, 512, 3, 3])
pruned_bias.shape : torch.Size([102])
pruned_bn_gamma.shape : torch.Size([102])
pruned_bn_beta.shape : torch.Size([102])
pruned_bn_running_mean.shape : torch.Size([102])
pruned_bn_running_var.shape : torch.Size([102])
pruned_next_weight.shape : torch.Size([512, 102])
Epoch : 001, Training loss : 0.00377
Epoch : 002, Training loss : 0.00247
Epoch : 003, Training loss : 0.00219
Epoch : 004, Training loss : 0.00205
Epoch : 005, Training loss : 0.00199
Epoch : 006, Training loss : 0.00197
Epoch : 007, Training loss : 0.00192
Epoch : 008, Training loss : 0.00190
Epoch : 009, Training loss : 0.00190
Epoch : 010, Training loss : 0.00190
Epoch : 011, Training loss : 0.00187
Epoch : 012, Training loss : 0.00186
Epoch : 013, Training loss : 0.00184
Epoch : 014, Training loss : 0.00183
Epoch : 015, Training loss : 0.00185
Epoch : 016, Training loss : 0.00182
Epoch : 017, Training loss : 0.00182
Epoch : 018, Training loss : 0.00182
Epoch : 019, Training loss : 0.00182
Epoch : 020, Training loss : 0.00178
																				 [conv13] pruned rate : 80%, #pruned channels : 410
																				 Top-1 accuracy : 91.76%, Top-5 accuracy : 99.43%

----- pruned rate : 90%, #pruned channels : 461 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171], device='cuda:0')
pruned_weight.shape : torch.Size([51, 512, 3, 3])
pruned_bias.shape : torch.Size([51])
pruned_bn_gamma.shape : torch.Size([51])
pruned_bn_beta.shape : torch.Size([51])
pruned_bn_running_mean.shape : torch.Size([51])
pruned_bn_running_var.shape : torch.Size([51])
pruned_next_weight.shape : torch.Size([512, 51])
Epoch : 001, Training loss : 0.00615
Epoch : 002, Training loss : 0.00284
Epoch : 003, Training loss : 0.00242
Epoch : 004, Training loss : 0.00222
Epoch : 005, Training loss : 0.00214
Epoch : 006, Training loss : 0.00206
Epoch : 007, Training loss : 0.00200
Epoch : 008, Training loss : 0.00194
Epoch : 009, Training loss : 0.00194
Epoch : 010, Training loss : 0.00192
Epoch : 011, Training loss : 0.00191
Epoch : 012, Training loss : 0.00190
Epoch : 013, Training loss : 0.00189
Epoch : 014, Training loss : 0.00184
Epoch : 015, Training loss : 0.00185
Epoch : 016, Training loss : 0.00183
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00182
Epoch : 019, Training loss : 0.00180
Epoch : 020, Training loss : 0.00179
																				 [conv13] pruned rate : 90%, #pruned channels : 461
																				 Top-1 accuracy : 91.77%, Top-5 accuracy : 99.37%

----- pruned rate : 95%, #pruned channels : 486 -----
weight.shape : torch.Size([512, 512, 3, 3])
bias.shape : torch.Size([512])
bn_gamma.shape : torch.Size([512])
bn_beta.shape : torch.Size([512])
bn_running_mean.shape : torch.Size([512])
bn_running_var.shape : torch.Size([512])
sorted_weight_indices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35, 213, 220,
         42, 457, 417, 128, 426, 492, 307, 293,  95,  75, 116, 505, 503, 418,
        187,  12, 350,  61, 268,   7, 134, 269, 171, 211, 178, 237, 242, 295,
        504, 225, 164, 490,  94, 231,   1, 175, 508, 176, 446, 413, 374,  29,
        344, 345, 467, 357, 202, 153, 193, 159, 190, 303, 251, 172,   8, 191,
        373,   6, 331, 272,   0, 338, 341, 300, 458, 469,  80, 221, 294,  46,
        230, 174, 188, 169, 181, 440, 433, 115, 195, 318, 346, 224, 397, 466,
        358, 486,  73, 365,  70, 271, 451, 361,  77, 210, 267, 448,  32, 309,
        298, 118, 185, 257, 125,  48, 136, 260, 488,  17, 305,  68, 147, 297,
        222, 380, 108, 332, 157,  16, 445, 478, 186, 113, 104, 247, 143, 449,
        110,  20, 114, 416, 377, 301,  18, 258, 241, 259, 336, 509,  30,  97,
        262, 372, 386, 200, 408, 310,  93, 383, 390,  63, 206, 444, 236, 204,
        250, 150, 325,  98, 453, 133, 351, 227, 161,  82, 184, 126, 312, 214,
        235, 438, 263,  96, 479, 362,   2,  54, 348, 442, 256, 319, 352,  49,
        146, 138,  69, 388,  28, 101, 240, 485, 454, 491, 140, 207, 228, 477,
         39, 470, 137, 100,  88, 349, 264, 112, 354, 144,  38, 411, 244,  22,
        510,  21, 340, 401, 111, 314, 480, 103, 324, 367, 154, 290, 378, 177,
        249,   3, 130, 455, 320, 432, 498, 387, 189, 364,  25,   4, 135,  41,
         89,  99, 476, 302,  43, 385, 399,  44, 166, 493, 450, 363, 201, 462,
        296, 180,   5, 304, 484, 506,  65, 238, 167, 311, 255, 392, 391, 229,
         79, 434, 428, 155, 109, 410, 468, 142, 499, 205, 124, 276, 286, 131,
        369, 376, 482, 429, 254, 306,  34, 424, 347, 313,  40, 192, 330,  85,
        218, 132,  53, 209, 464, 179, 473,  58, 360, 152, 406, 299, 212, 475,
         19,  27, 436, 288, 317, 414, 489, 106, 343,  91, 270, 148,  62, 460,
         90, 170, 342,  84, 239,  67, 203, 291,  83, 327, 165,  60, 266, 226,
        246, 123, 217, 430,  15,  59, 398, 409, 280,  24, 415,  50, 405, 275,
         55, 404,  78, 232, 315, 145, 234, 162, 497, 495, 356, 289, 281, 261,
        265, 107, 472,  86, 368, 370, 400, 335, 129, 196, 197,  92, 496, 102,
        447, 326, 321,  74, 419, 273, 507, 463, 322, 393,  51, 494, 359, 277,
        375, 425, 199, 119, 334,  37, 127, 389, 151, 441, 333,  47, 483,  13,
         56,  76,  81,  31, 355, 366,  52, 285,  45,  71, 243, 248,  26, 219,
        158, 395, 452, 403, 337, 198, 328, 471,  36, 183, 394, 371,  72, 435,
        465, 279, 233, 379, 431, 223, 168, 278, 422, 384, 308,  87, 439, 381,
        182, 481,  10,   9, 339, 252, 292, 194, 402, 353, 283, 139, 502, 156,
        282, 141,  14, 160, 407, 329,  33, 120, 500,  11,  64, 412,  23, 163,
        149, 121, 511, 216, 117, 421, 437, 456], device='cuda:0')
saving_filter_idices : tensor([ 66, 487, 253, 474, 173, 459, 420, 316, 427, 122, 245, 501, 423, 396,
        461, 443, 287, 215, 284, 274,  57, 382, 105, 323, 208,  35],
       device='cuda:0')
pruned_weight.shape : torch.Size([26, 512, 3, 3])
pruned_bias.shape : torch.Size([26])
pruned_bn_gamma.shape : torch.Size([26])
pruned_bn_beta.shape : torch.Size([26])
pruned_bn_running_mean.shape : torch.Size([26])
pruned_bn_running_var.shape : torch.Size([26])
pruned_next_weight.shape : torch.Size([512, 26])
Epoch : 001, Training loss : 0.01058
Epoch : 002, Training loss : 0.00310
Epoch : 003, Training loss : 0.00260
Epoch : 004, Training loss : 0.00236
Epoch : 005, Training loss : 0.00223
Epoch : 006, Training loss : 0.00215
Epoch : 007, Training loss : 0.00208
Epoch : 008, Training loss : 0.00203
Epoch : 009, Training loss : 0.00206
Epoch : 010, Training loss : 0.00193
Epoch : 011, Training loss : 0.00194
Epoch : 012, Training loss : 0.00189
Epoch : 013, Training loss : 0.00188
Epoch : 014, Training loss : 0.00185
Epoch : 015, Training loss : 0.00183
Epoch : 016, Training loss : 0.00180
Epoch : 017, Training loss : 0.00181
Epoch : 018, Training loss : 0.00181
Epoch : 019, Training loss : 0.00179
Epoch : 020, Training loss : 0.00178
																				 [conv13] pruned rate : 95%, #pruned channels : 486
																				 Top-1 accuracy : 91.82%, Top-5 accuracy : 99.35%
